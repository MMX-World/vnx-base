
// AUTO GENERATED by vnxcppcodegen

#include <vnx/test/TestValue.hxx>
#include <vnx/test/test_struct_t.hxx>

#include <vnx/test/package.hxx>
#include <vnx/vnx.h>



namespace vnx {

const TypeCode* type<::vnx::test::TestValue>::get_type_code() {
	return vnx::test::vnx_native_type_code_TestValue;
}

void type<::vnx::test::TestValue>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::test::TestValue());
}

void type<::vnx::test::TestValue>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::test::TestValue& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::test::test_struct_t>::get_type_code() {
	return vnx::test::vnx_native_type_code_test_struct_t;
}

void type<::vnx::test::test_struct_t>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::test::test_struct_t());
}

void type<::vnx::test::test_struct_t>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::test::test_struct_t& value, bool special) {
	code.push_back(CODE_OBJECT);
}


} // namespace vnx


namespace vnx {
namespace test {


void register_all_types() {
	vnx::register_type_code(::vnx::test::TestValue::static_create_type_code());
	vnx::register_type_code(::vnx::test::test_struct_t::static_create_type_code());
}

static struct vnx_static_init {
	vnx_static_init() {
		register_all_types();
	}
} vnx_static_init_;

const vnx::TypeCode* const vnx_native_type_code_TestValue = vnx::get_type_code(vnx::Hash64(0x8330d2d961c9571cull));
const vnx::TypeCode* const vnx_native_type_code_test_struct_t = vnx::get_type_code(vnx::Hash64(0xebf1aa05ed6ef641ull));

} // namespace vnx
} // namespace test
