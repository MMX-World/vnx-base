
// AUTO GENERATED by vnxcppcodegen

#include <vnx/BaseProxyBase.hxx>
#include <vnx/BaseServerBase.hxx>
#include <vnx/Endpoint.hxx>
#include <vnx/Endpoint_accept.hxx>
#include <vnx/Endpoint_accept_return.hxx>
#include <vnx/Endpoint_bind.hxx>
#include <vnx/Endpoint_bind_return.hxx>
#include <vnx/Endpoint_connect.hxx>
#include <vnx/Endpoint_connect_return.hxx>
#include <vnx/Endpoint_listen.hxx>
#include <vnx/Endpoint_listen_return.hxx>
#include <vnx/Endpoint_open.hxx>
#include <vnx/Endpoint_open_return.hxx>
#include <vnx/Endpoint_shutdown.hxx>
#include <vnx/Endpoint_shutdown_return.hxx>
#include <vnx/Endpoint_to_url.hxx>
#include <vnx/Endpoint_to_url_return.hxx>
#include <vnx/Exception.hxx>
#include <vnx/FlowMessage.hxx>
#include <vnx/Frame.hxx>
#include <vnx/GatewayBase.hxx>
#include <vnx/GatewayInterface_forward.hxx>
#include <vnx/GatewayInterface_forward_return.hxx>
#include <vnx/Generic.hxx>
#include <vnx/InternalError.hxx>
#include <vnx/JRPC_Error.hxx>
#include <vnx/JRPC_Failure.hxx>
#include <vnx/JRPC_Notification.hxx>
#include <vnx/JRPC_ProxyBase.hxx>
#include <vnx/JRPC_Proxy_select_service.hxx>
#include <vnx/JRPC_Proxy_select_service_return.hxx>
#include <vnx/JRPC_Request.hxx>
#include <vnx/JRPC_Request_is_notification.hxx>
#include <vnx/JRPC_Request_is_notification_return.hxx>
#include <vnx/JRPC_Request_is_request.hxx>
#include <vnx/JRPC_Request_is_request_return.hxx>
#include <vnx/JRPC_Request_is_request_object.hxx>
#include <vnx/JRPC_Request_is_request_object_return.hxx>
#include <vnx/JRPC_Response.hxx>
#include <vnx/JRPC_Response_is_response_object.hxx>
#include <vnx/JRPC_Response_is_response_object_return.hxx>
#include <vnx/JRPC_ServerBase.hxx>
#include <vnx/JRPC_Success.hxx>
#include <vnx/LogMsg.hxx>
#include <vnx/LogMsg_get_output.hxx>
#include <vnx/LogMsg_get_output_return.hxx>
#include <vnx/Marker.hxx>
#include <vnx/Message.hxx>
#include <vnx/ModuleInfo.hxx>
#include <vnx/ModuleInfo_get_cpu_load.hxx>
#include <vnx/ModuleInfo_get_cpu_load_return.hxx>
#include <vnx/ModuleInfo_get_cpu_load_total.hxx>
#include <vnx/ModuleInfo_get_cpu_load_total_return.hxx>
#include <vnx/ModuleInterface_vnx_get_config.hxx>
#include <vnx/ModuleInterface_vnx_get_config_return.hxx>
#include <vnx/ModuleInterface_vnx_get_config_object.hxx>
#include <vnx/ModuleInterface_vnx_get_config_object_return.hxx>
#include <vnx/ModuleInterface_vnx_get_module_info.hxx>
#include <vnx/ModuleInterface_vnx_get_module_info_return.hxx>
#include <vnx/ModuleInterface_vnx_get_type_code.hxx>
#include <vnx/ModuleInterface_vnx_get_type_code_return.hxx>
#include <vnx/ModuleInterface_vnx_restart.hxx>
#include <vnx/ModuleInterface_vnx_restart_return.hxx>
#include <vnx/ModuleInterface_vnx_self_test.hxx>
#include <vnx/ModuleInterface_vnx_self_test_return.hxx>
#include <vnx/ModuleInterface_vnx_set_config.hxx>
#include <vnx/ModuleInterface_vnx_set_config_return.hxx>
#include <vnx/ModuleInterface_vnx_set_config_object.hxx>
#include <vnx/ModuleInterface_vnx_set_config_object_return.hxx>
#include <vnx/ModuleInterface_vnx_stop.hxx>
#include <vnx/ModuleInterface_vnx_stop_return.hxx>
#include <vnx/NoSuchMethod.hxx>
#include <vnx/NoSuchService.hxx>
#include <vnx/OverflowException.hxx>
#include <vnx/PermissionDenied.hxx>
#include <vnx/PlayerBase.hxx>
#include <vnx/Player_get_info.hxx>
#include <vnx/Player_get_info_return.hxx>
#include <vnx/Player_pause.hxx>
#include <vnx/Player_pause_return.hxx>
#include <vnx/Player_play.hxx>
#include <vnx/Player_play_return.hxx>
#include <vnx/Player_seek_by_count.hxx>
#include <vnx/Player_seek_by_count_return.hxx>
#include <vnx/Player_seek_by_time.hxx>
#include <vnx/Player_seek_by_time_return.hxx>
#include <vnx/Player_seek_to_position.hxx>
#include <vnx/Player_seek_to_position_return.hxx>
#include <vnx/Player_seek_to_time.hxx>
#include <vnx/Player_seek_to_time_return.hxx>
#include <vnx/Player_set_speed.hxx>
#include <vnx/Player_set_speed_return.hxx>
#include <vnx/Player_stop.hxx>
#include <vnx/Player_stop_return.hxx>
#include <vnx/Player_toggle.hxx>
#include <vnx/Player_toggle_return.hxx>
#include <vnx/PlayerStatus.hxx>
#include <vnx/ProcessBase.hxx>
#include <vnx/Process_get_global_config.hxx>
#include <vnx/Process_get_global_config_return.hxx>
#include <vnx/Process_get_module_info.hxx>
#include <vnx/Process_get_module_info_return.hxx>
#include <vnx/Process_get_name.hxx>
#include <vnx/Process_get_name_return.hxx>
#include <vnx/Process_get_process_info.hxx>
#include <vnx/Process_get_process_info_return.hxx>
#include <vnx/Process_get_sync_time.hxx>
#include <vnx/Process_get_sync_time_return.hxx>
#include <vnx/Process_get_topic_info.hxx>
#include <vnx/Process_get_topic_info_return.hxx>
#include <vnx/Process_grep_log.hxx>
#include <vnx/Process_grep_log_return.hxx>
#include <vnx/Process_journal_log.hxx>
#include <vnx/Process_journal_log_return.hxx>
#include <vnx/Process_pause_log.hxx>
#include <vnx/Process_pause_log_return.hxx>
#include <vnx/Process_reload_config.hxx>
#include <vnx/Process_reload_config_return.hxx>
#include <vnx/Process_resume_log.hxx>
#include <vnx/Process_resume_log_return.hxx>
#include <vnx/Process_self_test_all.hxx>
#include <vnx/Process_self_test_all_return.hxx>
#include <vnx/Process_set_debug.hxx>
#include <vnx/Process_set_debug_return.hxx>
#include <vnx/Process_set_global_config.hxx>
#include <vnx/Process_set_global_config_return.hxx>
#include <vnx/Process_show_error_log.hxx>
#include <vnx/Process_show_error_log_return.hxx>
#include <vnx/Process_trigger_shutdown.hxx>
#include <vnx/Process_trigger_shutdown_return.hxx>
#include <vnx/Process_ungrep_log.hxx>
#include <vnx/Process_ungrep_log_return.hxx>
#include <vnx/ProcessInfo.hxx>
#include <vnx/ProxyBase.hxx>
#include <vnx/ProxyInterface_disable_export.hxx>
#include <vnx/ProxyInterface_disable_export_return.hxx>
#include <vnx/ProxyInterface_disable_forward.hxx>
#include <vnx/ProxyInterface_disable_forward_return.hxx>
#include <vnx/ProxyInterface_disable_import.hxx>
#include <vnx/ProxyInterface_disable_import_return.hxx>
#include <vnx/ProxyInterface_disable_tunnel.hxx>
#include <vnx/ProxyInterface_disable_tunnel_return.hxx>
#include <vnx/ProxyInterface_enable_export.hxx>
#include <vnx/ProxyInterface_enable_export_return.hxx>
#include <vnx/ProxyInterface_enable_forward.hxx>
#include <vnx/ProxyInterface_enable_forward_return.hxx>
#include <vnx/ProxyInterface_enable_import.hxx>
#include <vnx/ProxyInterface_enable_import_return.hxx>
#include <vnx/ProxyInterface_enable_tunnel.hxx>
#include <vnx/ProxyInterface_enable_tunnel_return.hxx>
#include <vnx/ProxyInterface_get_session.hxx>
#include <vnx/ProxyInterface_get_session_return.hxx>
#include <vnx/ProxyInterface_login.hxx>
#include <vnx/ProxyInterface_login_return.hxx>
#include <vnx/ProxyInterface_on_connect.hxx>
#include <vnx/ProxyInterface_on_connect_return.hxx>
#include <vnx/ProxyInterface_on_disconnect.hxx>
#include <vnx/ProxyInterface_on_disconnect_return.hxx>
#include <vnx/ProxyInterface_on_login.hxx>
#include <vnx/ProxyInterface_on_login_return.hxx>
#include <vnx/ProxyInterface_on_remote_connect.hxx>
#include <vnx/ProxyInterface_on_remote_connect_return.hxx>
#include <vnx/ProxyInterface_on_remote_login.hxx>
#include <vnx/ProxyInterface_on_remote_login_return.hxx>
#include <vnx/ProxyInterface_wait_on_connect.hxx>
#include <vnx/ProxyInterface_wait_on_connect_return.hxx>
#include <vnx/ProxyInterface_wait_on_disconnect.hxx>
#include <vnx/ProxyInterface_wait_on_disconnect_return.hxx>
#include <vnx/RecordHeader.hxx>
#include <vnx/RecordIndex.hxx>
#include <vnx/RecordPointer.hxx>
#include <vnx/RecorderBase.hxx>
#include <vnx/RecorderStatus.hxx>
#include <vnx/Request.hxx>
#include <vnx/RequestQueueBase.hxx>
#include <vnx/RequestQueue_clear.hxx>
#include <vnx/RequestQueue_clear_return.hxx>
#include <vnx/RequestQueue_purge.hxx>
#include <vnx/RequestQueue_purge_return.hxx>
#include <vnx/Return.hxx>
#include <vnx/RouterBase.hxx>
#include <vnx/Sample.hxx>
#include <vnx/ServerBase.hxx>
#include <vnx/Session.hxx>
#include <vnx/Session_has_permission.hxx>
#include <vnx/Session_has_permission_return.hxx>
#include <vnx/Session_has_permission_vnx.hxx>
#include <vnx/Session_has_permission_vnx_return.hxx>
#include <vnx/Session_is_anonymous.hxx>
#include <vnx/Session_is_anonymous_return.hxx>
#include <vnx/SpyToolBase.hxx>
#include <vnx/TcpEndpoint.hxx>
#include <vnx/TcpEndpoint_accept.hxx>
#include <vnx/TcpEndpoint_accept_return.hxx>
#include <vnx/TcpEndpoint_bind.hxx>
#include <vnx/TcpEndpoint_bind_return.hxx>
#include <vnx/TcpEndpoint_close.hxx>
#include <vnx/TcpEndpoint_close_return.hxx>
#include <vnx/TcpEndpoint_connect.hxx>
#include <vnx/TcpEndpoint_connect_return.hxx>
#include <vnx/TcpEndpoint_listen.hxx>
#include <vnx/TcpEndpoint_listen_return.hxx>
#include <vnx/TcpEndpoint_open.hxx>
#include <vnx/TcpEndpoint_open_return.hxx>
#include <vnx/TcpEndpoint_set_options.hxx>
#include <vnx/TcpEndpoint_set_options_return.hxx>
#include <vnx/TcpEndpoint_shutdown.hxx>
#include <vnx/TcpEndpoint_shutdown_return.hxx>
#include <vnx/TcpEndpoint_to_url.hxx>
#include <vnx/TcpEndpoint_to_url_return.hxx>
#include <vnx/TerminalBase.hxx>
#include <vnx/Terminal_read_char.hxx>
#include <vnx/Terminal_read_char_return.hxx>
#include <vnx/Terminal_read_event.hxx>
#include <vnx/Terminal_read_event_return.hxx>
#include <vnx/TimeControl.hxx>
#include <vnx/TimeControl_get_time_micros.hxx>
#include <vnx/TimeControl_get_time_micros_return.hxx>
#include <vnx/TimeServerBase.hxx>
#include <vnx/TimeSync.hxx>
#include <vnx/TimeSync_get_time_micros.hxx>
#include <vnx/TimeSync_get_time_micros_return.hxx>
#include <vnx/TopicInfo.hxx>
#include <vnx/TopicInfoList.hxx>
#include <vnx/Tuple.hxx>
#include <vnx/Tuple_get_field_by_index.hxx>
#include <vnx/Tuple_get_field_by_index_return.hxx>
#include <vnx/Tuple_get_num_fields.hxx>
#include <vnx/Tuple_get_num_fields_return.hxx>
#include <vnx/Tuple_set_field_by_index.hxx>
#include <vnx/Tuple_set_field_by_index_return.hxx>
#include <vnx/UnixEndpoint.hxx>
#include <vnx/UnixEndpoint_accept.hxx>
#include <vnx/UnixEndpoint_accept_return.hxx>
#include <vnx/UnixEndpoint_bind.hxx>
#include <vnx/UnixEndpoint_bind_return.hxx>
#include <vnx/UnixEndpoint_close.hxx>
#include <vnx/UnixEndpoint_close_return.hxx>
#include <vnx/UnixEndpoint_connect.hxx>
#include <vnx/UnixEndpoint_connect_return.hxx>
#include <vnx/UnixEndpoint_listen.hxx>
#include <vnx/UnixEndpoint_listen_return.hxx>
#include <vnx/UnixEndpoint_open.hxx>
#include <vnx/UnixEndpoint_open_return.hxx>
#include <vnx/UnixEndpoint_set_options.hxx>
#include <vnx/UnixEndpoint_set_options_return.hxx>
#include <vnx/UnixEndpoint_shutdown.hxx>
#include <vnx/UnixEndpoint_shutdown_return.hxx>
#include <vnx/UnixEndpoint_to_url.hxx>
#include <vnx/UnixEndpoint_to_url_return.hxx>
#include <vnx/User.hxx>
#include <vnx/access_role_e.hxx>
#include <vnx/permission_e.hxx>
#include <vnx/record_index_entry_t.hxx>
#include <vnx/record_topic_info_t.hxx>
#include <vnx/terminal_event_e.hxx>
#include <vnx/thread_priority_e.hxx>
#include <vnx/Buffer.hpp>
#include <vnx/Hash64.hpp>
#include <vnx/Object.hpp>
#include <vnx/TopicPtr.hpp>
#include <vnx/TypeCode.hpp>
#include <vnx/Variant.hpp>

#include <vnx/package.hxx>
#include <vnx/vnx.h>



namespace vnx {

const TypeCode* type<::vnx::Buffer>::get_type_code() {
	return nullptr;
}

void type<::vnx::Buffer>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Buffer());
}

void type<::vnx::Buffer>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Buffer& value, bool special) {
	const std::vector<int> tmp = {12, 1};
	code.insert(code.end(), tmp.begin(), tmp.end());}

const TypeCode* type<::vnx::Endpoint>::get_type_code() {
	return vnx::vnx_native_type_code_Endpoint;
}

void type<::vnx::Endpoint>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Endpoint());
}

void type<::vnx::Endpoint>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Endpoint& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Endpoint_accept>::get_type_code() {
	return vnx::vnx_native_type_code_Endpoint_accept;
}

void type<::vnx::Endpoint_accept>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Endpoint_accept());
}

void type<::vnx::Endpoint_accept>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Endpoint_accept& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Endpoint_accept_return>::get_type_code() {
	return vnx::vnx_native_type_code_Endpoint_accept_return;
}

void type<::vnx::Endpoint_accept_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Endpoint_accept_return());
}

void type<::vnx::Endpoint_accept_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Endpoint_accept_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Endpoint_bind>::get_type_code() {
	return vnx::vnx_native_type_code_Endpoint_bind;
}

void type<::vnx::Endpoint_bind>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Endpoint_bind());
}

void type<::vnx::Endpoint_bind>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Endpoint_bind& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Endpoint_bind_return>::get_type_code() {
	return vnx::vnx_native_type_code_Endpoint_bind_return;
}

void type<::vnx::Endpoint_bind_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Endpoint_bind_return());
}

void type<::vnx::Endpoint_bind_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Endpoint_bind_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Endpoint_connect>::get_type_code() {
	return vnx::vnx_native_type_code_Endpoint_connect;
}

void type<::vnx::Endpoint_connect>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Endpoint_connect());
}

void type<::vnx::Endpoint_connect>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Endpoint_connect& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Endpoint_connect_return>::get_type_code() {
	return vnx::vnx_native_type_code_Endpoint_connect_return;
}

void type<::vnx::Endpoint_connect_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Endpoint_connect_return());
}

void type<::vnx::Endpoint_connect_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Endpoint_connect_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Endpoint_listen>::get_type_code() {
	return vnx::vnx_native_type_code_Endpoint_listen;
}

void type<::vnx::Endpoint_listen>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Endpoint_listen());
}

void type<::vnx::Endpoint_listen>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Endpoint_listen& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Endpoint_listen_return>::get_type_code() {
	return vnx::vnx_native_type_code_Endpoint_listen_return;
}

void type<::vnx::Endpoint_listen_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Endpoint_listen_return());
}

void type<::vnx::Endpoint_listen_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Endpoint_listen_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Endpoint_open>::get_type_code() {
	return vnx::vnx_native_type_code_Endpoint_open;
}

void type<::vnx::Endpoint_open>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Endpoint_open());
}

void type<::vnx::Endpoint_open>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Endpoint_open& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Endpoint_open_return>::get_type_code() {
	return vnx::vnx_native_type_code_Endpoint_open_return;
}

void type<::vnx::Endpoint_open_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Endpoint_open_return());
}

void type<::vnx::Endpoint_open_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Endpoint_open_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Endpoint_shutdown>::get_type_code() {
	return vnx::vnx_native_type_code_Endpoint_shutdown;
}

void type<::vnx::Endpoint_shutdown>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Endpoint_shutdown());
}

void type<::vnx::Endpoint_shutdown>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Endpoint_shutdown& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Endpoint_shutdown_return>::get_type_code() {
	return vnx::vnx_native_type_code_Endpoint_shutdown_return;
}

void type<::vnx::Endpoint_shutdown_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Endpoint_shutdown_return());
}

void type<::vnx::Endpoint_shutdown_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Endpoint_shutdown_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Endpoint_to_url>::get_type_code() {
	return vnx::vnx_native_type_code_Endpoint_to_url;
}

void type<::vnx::Endpoint_to_url>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Endpoint_to_url());
}

void type<::vnx::Endpoint_to_url>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Endpoint_to_url& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Endpoint_to_url_return>::get_type_code() {
	return vnx::vnx_native_type_code_Endpoint_to_url_return;
}

void type<::vnx::Endpoint_to_url_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Endpoint_to_url_return());
}

void type<::vnx::Endpoint_to_url_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Endpoint_to_url_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Exception>::get_type_code() {
	return vnx::vnx_native_type_code_Exception;
}

void type<::vnx::Exception>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Exception());
}

void type<::vnx::Exception>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Exception& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::FlowMessage>::get_type_code() {
	return vnx::vnx_native_type_code_FlowMessage;
}

void type<::vnx::FlowMessage>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::FlowMessage());
}

void type<::vnx::FlowMessage>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::FlowMessage& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Frame>::get_type_code() {
	return vnx::vnx_native_type_code_Frame;
}

void type<::vnx::Frame>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Frame());
}

void type<::vnx::Frame>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Frame& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::GatewayInterface_forward>::get_type_code() {
	return vnx::vnx_native_type_code_GatewayInterface_forward;
}

void type<::vnx::GatewayInterface_forward>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::GatewayInterface_forward());
}

void type<::vnx::GatewayInterface_forward>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::GatewayInterface_forward& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::GatewayInterface_forward_return>::get_type_code() {
	return vnx::vnx_native_type_code_GatewayInterface_forward_return;
}

void type<::vnx::GatewayInterface_forward_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::GatewayInterface_forward_return());
}

void type<::vnx::GatewayInterface_forward_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::GatewayInterface_forward_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Generic>::get_type_code() {
	return vnx::vnx_native_type_code_Generic;
}

void type<::vnx::Generic>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Generic());
}

void type<::vnx::Generic>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Generic& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Hash64>::get_type_code() {
	return nullptr;
}

void type<::vnx::Hash64>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Hash64());
}

void type<::vnx::Hash64>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Hash64& value, bool special) {
	const std::vector<int> tmp = {4};
	code.insert(code.end(), tmp.begin(), tmp.end());}

const TypeCode* type<::vnx::InternalError>::get_type_code() {
	return vnx::vnx_native_type_code_InternalError;
}

void type<::vnx::InternalError>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::InternalError());
}

void type<::vnx::InternalError>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::InternalError& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::JRPC_Error>::get_type_code() {
	return vnx::vnx_native_type_code_JRPC_Error;
}

void type<::vnx::JRPC_Error>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::JRPC_Error());
}

void type<::vnx::JRPC_Error>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::JRPC_Error& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::JRPC_Failure>::get_type_code() {
	return vnx::vnx_native_type_code_JRPC_Failure;
}

void type<::vnx::JRPC_Failure>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::JRPC_Failure());
}

void type<::vnx::JRPC_Failure>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::JRPC_Failure& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::JRPC_Notification>::get_type_code() {
	return vnx::vnx_native_type_code_JRPC_Notification;
}

void type<::vnx::JRPC_Notification>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::JRPC_Notification());
}

void type<::vnx::JRPC_Notification>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::JRPC_Notification& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::JRPC_Proxy_select_service>::get_type_code() {
	return vnx::vnx_native_type_code_JRPC_Proxy_select_service;
}

void type<::vnx::JRPC_Proxy_select_service>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::JRPC_Proxy_select_service());
}

void type<::vnx::JRPC_Proxy_select_service>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::JRPC_Proxy_select_service& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::JRPC_Proxy_select_service_return>::get_type_code() {
	return vnx::vnx_native_type_code_JRPC_Proxy_select_service_return;
}

void type<::vnx::JRPC_Proxy_select_service_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::JRPC_Proxy_select_service_return());
}

void type<::vnx::JRPC_Proxy_select_service_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::JRPC_Proxy_select_service_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::JRPC_Request>::get_type_code() {
	return vnx::vnx_native_type_code_JRPC_Request;
}

void type<::vnx::JRPC_Request>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::JRPC_Request());
}

void type<::vnx::JRPC_Request>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::JRPC_Request& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::JRPC_Request_is_notification>::get_type_code() {
	return vnx::vnx_native_type_code_JRPC_Request_is_notification;
}

void type<::vnx::JRPC_Request_is_notification>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::JRPC_Request_is_notification());
}

void type<::vnx::JRPC_Request_is_notification>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::JRPC_Request_is_notification& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::JRPC_Request_is_notification_return>::get_type_code() {
	return vnx::vnx_native_type_code_JRPC_Request_is_notification_return;
}

void type<::vnx::JRPC_Request_is_notification_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::JRPC_Request_is_notification_return());
}

void type<::vnx::JRPC_Request_is_notification_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::JRPC_Request_is_notification_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::JRPC_Request_is_request>::get_type_code() {
	return vnx::vnx_native_type_code_JRPC_Request_is_request;
}

void type<::vnx::JRPC_Request_is_request>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::JRPC_Request_is_request());
}

void type<::vnx::JRPC_Request_is_request>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::JRPC_Request_is_request& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::JRPC_Request_is_request_return>::get_type_code() {
	return vnx::vnx_native_type_code_JRPC_Request_is_request_return;
}

void type<::vnx::JRPC_Request_is_request_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::JRPC_Request_is_request_return());
}

void type<::vnx::JRPC_Request_is_request_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::JRPC_Request_is_request_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::JRPC_Request_is_request_object>::get_type_code() {
	return vnx::vnx_native_type_code_JRPC_Request_is_request_object;
}

void type<::vnx::JRPC_Request_is_request_object>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::JRPC_Request_is_request_object());
}

void type<::vnx::JRPC_Request_is_request_object>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::JRPC_Request_is_request_object& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::JRPC_Request_is_request_object_return>::get_type_code() {
	return vnx::vnx_native_type_code_JRPC_Request_is_request_object_return;
}

void type<::vnx::JRPC_Request_is_request_object_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::JRPC_Request_is_request_object_return());
}

void type<::vnx::JRPC_Request_is_request_object_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::JRPC_Request_is_request_object_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::JRPC_Response>::get_type_code() {
	return vnx::vnx_native_type_code_JRPC_Response;
}

void type<::vnx::JRPC_Response>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::JRPC_Response());
}

void type<::vnx::JRPC_Response>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::JRPC_Response& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::JRPC_Response_is_response_object>::get_type_code() {
	return vnx::vnx_native_type_code_JRPC_Response_is_response_object;
}

void type<::vnx::JRPC_Response_is_response_object>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::JRPC_Response_is_response_object());
}

void type<::vnx::JRPC_Response_is_response_object>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::JRPC_Response_is_response_object& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::JRPC_Response_is_response_object_return>::get_type_code() {
	return vnx::vnx_native_type_code_JRPC_Response_is_response_object_return;
}

void type<::vnx::JRPC_Response_is_response_object_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::JRPC_Response_is_response_object_return());
}

void type<::vnx::JRPC_Response_is_response_object_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::JRPC_Response_is_response_object_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::JRPC_Success>::get_type_code() {
	return vnx::vnx_native_type_code_JRPC_Success;
}

void type<::vnx::JRPC_Success>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::JRPC_Success());
}

void type<::vnx::JRPC_Success>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::JRPC_Success& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::LogMsg>::get_type_code() {
	return vnx::vnx_native_type_code_LogMsg;
}

void type<::vnx::LogMsg>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::LogMsg());
}

void type<::vnx::LogMsg>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::LogMsg& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::LogMsg_get_output>::get_type_code() {
	return vnx::vnx_native_type_code_LogMsg_get_output;
}

void type<::vnx::LogMsg_get_output>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::LogMsg_get_output());
}

void type<::vnx::LogMsg_get_output>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::LogMsg_get_output& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::LogMsg_get_output_return>::get_type_code() {
	return vnx::vnx_native_type_code_LogMsg_get_output_return;
}

void type<::vnx::LogMsg_get_output_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::LogMsg_get_output_return());
}

void type<::vnx::LogMsg_get_output_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::LogMsg_get_output_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Marker>::get_type_code() {
	return vnx::vnx_native_type_code_Marker;
}

void type<::vnx::Marker>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Marker());
}

void type<::vnx::Marker>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Marker& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Message>::get_type_code() {
	return vnx::vnx_native_type_code_Message;
}

void type<::vnx::Message>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Message());
}

void type<::vnx::Message>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Message& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ModuleInfo>::get_type_code() {
	return vnx::vnx_native_type_code_ModuleInfo;
}

void type<::vnx::ModuleInfo>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ModuleInfo());
}

void type<::vnx::ModuleInfo>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ModuleInfo& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ModuleInfo_get_cpu_load>::get_type_code() {
	return vnx::vnx_native_type_code_ModuleInfo_get_cpu_load;
}

void type<::vnx::ModuleInfo_get_cpu_load>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ModuleInfo_get_cpu_load());
}

void type<::vnx::ModuleInfo_get_cpu_load>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ModuleInfo_get_cpu_load& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ModuleInfo_get_cpu_load_return>::get_type_code() {
	return vnx::vnx_native_type_code_ModuleInfo_get_cpu_load_return;
}

void type<::vnx::ModuleInfo_get_cpu_load_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ModuleInfo_get_cpu_load_return());
}

void type<::vnx::ModuleInfo_get_cpu_load_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ModuleInfo_get_cpu_load_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ModuleInfo_get_cpu_load_total>::get_type_code() {
	return vnx::vnx_native_type_code_ModuleInfo_get_cpu_load_total;
}

void type<::vnx::ModuleInfo_get_cpu_load_total>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ModuleInfo_get_cpu_load_total());
}

void type<::vnx::ModuleInfo_get_cpu_load_total>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ModuleInfo_get_cpu_load_total& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ModuleInfo_get_cpu_load_total_return>::get_type_code() {
	return vnx::vnx_native_type_code_ModuleInfo_get_cpu_load_total_return;
}

void type<::vnx::ModuleInfo_get_cpu_load_total_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ModuleInfo_get_cpu_load_total_return());
}

void type<::vnx::ModuleInfo_get_cpu_load_total_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ModuleInfo_get_cpu_load_total_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ModuleInterface_vnx_get_config>::get_type_code() {
	return vnx::vnx_native_type_code_ModuleInterface_vnx_get_config;
}

void type<::vnx::ModuleInterface_vnx_get_config>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ModuleInterface_vnx_get_config());
}

void type<::vnx::ModuleInterface_vnx_get_config>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ModuleInterface_vnx_get_config& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ModuleInterface_vnx_get_config_return>::get_type_code() {
	return vnx::vnx_native_type_code_ModuleInterface_vnx_get_config_return;
}

void type<::vnx::ModuleInterface_vnx_get_config_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ModuleInterface_vnx_get_config_return());
}

void type<::vnx::ModuleInterface_vnx_get_config_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ModuleInterface_vnx_get_config_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ModuleInterface_vnx_get_config_object>::get_type_code() {
	return vnx::vnx_native_type_code_ModuleInterface_vnx_get_config_object;
}

void type<::vnx::ModuleInterface_vnx_get_config_object>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ModuleInterface_vnx_get_config_object());
}

void type<::vnx::ModuleInterface_vnx_get_config_object>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ModuleInterface_vnx_get_config_object& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ModuleInterface_vnx_get_config_object_return>::get_type_code() {
	return vnx::vnx_native_type_code_ModuleInterface_vnx_get_config_object_return;
}

void type<::vnx::ModuleInterface_vnx_get_config_object_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ModuleInterface_vnx_get_config_object_return());
}

void type<::vnx::ModuleInterface_vnx_get_config_object_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ModuleInterface_vnx_get_config_object_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ModuleInterface_vnx_get_module_info>::get_type_code() {
	return vnx::vnx_native_type_code_ModuleInterface_vnx_get_module_info;
}

void type<::vnx::ModuleInterface_vnx_get_module_info>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ModuleInterface_vnx_get_module_info());
}

void type<::vnx::ModuleInterface_vnx_get_module_info>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ModuleInterface_vnx_get_module_info& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ModuleInterface_vnx_get_module_info_return>::get_type_code() {
	return vnx::vnx_native_type_code_ModuleInterface_vnx_get_module_info_return;
}

void type<::vnx::ModuleInterface_vnx_get_module_info_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ModuleInterface_vnx_get_module_info_return());
}

void type<::vnx::ModuleInterface_vnx_get_module_info_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ModuleInterface_vnx_get_module_info_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ModuleInterface_vnx_get_type_code>::get_type_code() {
	return vnx::vnx_native_type_code_ModuleInterface_vnx_get_type_code;
}

void type<::vnx::ModuleInterface_vnx_get_type_code>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ModuleInterface_vnx_get_type_code());
}

void type<::vnx::ModuleInterface_vnx_get_type_code>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ModuleInterface_vnx_get_type_code& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ModuleInterface_vnx_get_type_code_return>::get_type_code() {
	return vnx::vnx_native_type_code_ModuleInterface_vnx_get_type_code_return;
}

void type<::vnx::ModuleInterface_vnx_get_type_code_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ModuleInterface_vnx_get_type_code_return());
}

void type<::vnx::ModuleInterface_vnx_get_type_code_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ModuleInterface_vnx_get_type_code_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ModuleInterface_vnx_restart>::get_type_code() {
	return vnx::vnx_native_type_code_ModuleInterface_vnx_restart;
}

void type<::vnx::ModuleInterface_vnx_restart>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ModuleInterface_vnx_restart());
}

void type<::vnx::ModuleInterface_vnx_restart>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ModuleInterface_vnx_restart& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ModuleInterface_vnx_restart_return>::get_type_code() {
	return vnx::vnx_native_type_code_ModuleInterface_vnx_restart_return;
}

void type<::vnx::ModuleInterface_vnx_restart_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ModuleInterface_vnx_restart_return());
}

void type<::vnx::ModuleInterface_vnx_restart_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ModuleInterface_vnx_restart_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ModuleInterface_vnx_self_test>::get_type_code() {
	return vnx::vnx_native_type_code_ModuleInterface_vnx_self_test;
}

void type<::vnx::ModuleInterface_vnx_self_test>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ModuleInterface_vnx_self_test());
}

void type<::vnx::ModuleInterface_vnx_self_test>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ModuleInterface_vnx_self_test& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ModuleInterface_vnx_self_test_return>::get_type_code() {
	return vnx::vnx_native_type_code_ModuleInterface_vnx_self_test_return;
}

void type<::vnx::ModuleInterface_vnx_self_test_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ModuleInterface_vnx_self_test_return());
}

void type<::vnx::ModuleInterface_vnx_self_test_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ModuleInterface_vnx_self_test_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ModuleInterface_vnx_set_config>::get_type_code() {
	return vnx::vnx_native_type_code_ModuleInterface_vnx_set_config;
}

void type<::vnx::ModuleInterface_vnx_set_config>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ModuleInterface_vnx_set_config());
}

void type<::vnx::ModuleInterface_vnx_set_config>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ModuleInterface_vnx_set_config& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ModuleInterface_vnx_set_config_return>::get_type_code() {
	return vnx::vnx_native_type_code_ModuleInterface_vnx_set_config_return;
}

void type<::vnx::ModuleInterface_vnx_set_config_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ModuleInterface_vnx_set_config_return());
}

void type<::vnx::ModuleInterface_vnx_set_config_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ModuleInterface_vnx_set_config_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ModuleInterface_vnx_set_config_object>::get_type_code() {
	return vnx::vnx_native_type_code_ModuleInterface_vnx_set_config_object;
}

void type<::vnx::ModuleInterface_vnx_set_config_object>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ModuleInterface_vnx_set_config_object());
}

void type<::vnx::ModuleInterface_vnx_set_config_object>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ModuleInterface_vnx_set_config_object& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ModuleInterface_vnx_set_config_object_return>::get_type_code() {
	return vnx::vnx_native_type_code_ModuleInterface_vnx_set_config_object_return;
}

void type<::vnx::ModuleInterface_vnx_set_config_object_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ModuleInterface_vnx_set_config_object_return());
}

void type<::vnx::ModuleInterface_vnx_set_config_object_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ModuleInterface_vnx_set_config_object_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ModuleInterface_vnx_stop>::get_type_code() {
	return vnx::vnx_native_type_code_ModuleInterface_vnx_stop;
}

void type<::vnx::ModuleInterface_vnx_stop>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ModuleInterface_vnx_stop());
}

void type<::vnx::ModuleInterface_vnx_stop>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ModuleInterface_vnx_stop& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ModuleInterface_vnx_stop_return>::get_type_code() {
	return vnx::vnx_native_type_code_ModuleInterface_vnx_stop_return;
}

void type<::vnx::ModuleInterface_vnx_stop_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ModuleInterface_vnx_stop_return());
}

void type<::vnx::ModuleInterface_vnx_stop_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ModuleInterface_vnx_stop_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::NoSuchMethod>::get_type_code() {
	return vnx::vnx_native_type_code_NoSuchMethod;
}

void type<::vnx::NoSuchMethod>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::NoSuchMethod());
}

void type<::vnx::NoSuchMethod>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::NoSuchMethod& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::NoSuchService>::get_type_code() {
	return vnx::vnx_native_type_code_NoSuchService;
}

void type<::vnx::NoSuchService>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::NoSuchService());
}

void type<::vnx::NoSuchService>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::NoSuchService& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Object>::get_type_code() {
	return nullptr;
}

void type<::vnx::Object>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Object());
}

void type<::vnx::Object>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Object& value, bool special) {
	const std::vector<int> tmp = {24};
	code.insert(code.end(), tmp.begin(), tmp.end());}

const TypeCode* type<::vnx::OverflowException>::get_type_code() {
	return vnx::vnx_native_type_code_OverflowException;
}

void type<::vnx::OverflowException>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::OverflowException());
}

void type<::vnx::OverflowException>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::OverflowException& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::PermissionDenied>::get_type_code() {
	return vnx::vnx_native_type_code_PermissionDenied;
}

void type<::vnx::PermissionDenied>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::PermissionDenied());
}

void type<::vnx::PermissionDenied>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::PermissionDenied& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Player_get_info>::get_type_code() {
	return vnx::vnx_native_type_code_Player_get_info;
}

void type<::vnx::Player_get_info>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Player_get_info());
}

void type<::vnx::Player_get_info>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Player_get_info& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Player_get_info_return>::get_type_code() {
	return vnx::vnx_native_type_code_Player_get_info_return;
}

void type<::vnx::Player_get_info_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Player_get_info_return());
}

void type<::vnx::Player_get_info_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Player_get_info_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Player_pause>::get_type_code() {
	return vnx::vnx_native_type_code_Player_pause;
}

void type<::vnx::Player_pause>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Player_pause());
}

void type<::vnx::Player_pause>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Player_pause& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Player_pause_return>::get_type_code() {
	return vnx::vnx_native_type_code_Player_pause_return;
}

void type<::vnx::Player_pause_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Player_pause_return());
}

void type<::vnx::Player_pause_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Player_pause_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Player_play>::get_type_code() {
	return vnx::vnx_native_type_code_Player_play;
}

void type<::vnx::Player_play>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Player_play());
}

void type<::vnx::Player_play>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Player_play& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Player_play_return>::get_type_code() {
	return vnx::vnx_native_type_code_Player_play_return;
}

void type<::vnx::Player_play_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Player_play_return());
}

void type<::vnx::Player_play_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Player_play_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Player_seek_by_count>::get_type_code() {
	return vnx::vnx_native_type_code_Player_seek_by_count;
}

void type<::vnx::Player_seek_by_count>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Player_seek_by_count());
}

void type<::vnx::Player_seek_by_count>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Player_seek_by_count& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Player_seek_by_count_return>::get_type_code() {
	return vnx::vnx_native_type_code_Player_seek_by_count_return;
}

void type<::vnx::Player_seek_by_count_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Player_seek_by_count_return());
}

void type<::vnx::Player_seek_by_count_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Player_seek_by_count_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Player_seek_by_time>::get_type_code() {
	return vnx::vnx_native_type_code_Player_seek_by_time;
}

void type<::vnx::Player_seek_by_time>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Player_seek_by_time());
}

void type<::vnx::Player_seek_by_time>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Player_seek_by_time& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Player_seek_by_time_return>::get_type_code() {
	return vnx::vnx_native_type_code_Player_seek_by_time_return;
}

void type<::vnx::Player_seek_by_time_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Player_seek_by_time_return());
}

void type<::vnx::Player_seek_by_time_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Player_seek_by_time_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Player_seek_to_position>::get_type_code() {
	return vnx::vnx_native_type_code_Player_seek_to_position;
}

void type<::vnx::Player_seek_to_position>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Player_seek_to_position());
}

void type<::vnx::Player_seek_to_position>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Player_seek_to_position& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Player_seek_to_position_return>::get_type_code() {
	return vnx::vnx_native_type_code_Player_seek_to_position_return;
}

void type<::vnx::Player_seek_to_position_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Player_seek_to_position_return());
}

void type<::vnx::Player_seek_to_position_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Player_seek_to_position_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Player_seek_to_time>::get_type_code() {
	return vnx::vnx_native_type_code_Player_seek_to_time;
}

void type<::vnx::Player_seek_to_time>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Player_seek_to_time());
}

void type<::vnx::Player_seek_to_time>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Player_seek_to_time& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Player_seek_to_time_return>::get_type_code() {
	return vnx::vnx_native_type_code_Player_seek_to_time_return;
}

void type<::vnx::Player_seek_to_time_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Player_seek_to_time_return());
}

void type<::vnx::Player_seek_to_time_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Player_seek_to_time_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Player_set_speed>::get_type_code() {
	return vnx::vnx_native_type_code_Player_set_speed;
}

void type<::vnx::Player_set_speed>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Player_set_speed());
}

void type<::vnx::Player_set_speed>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Player_set_speed& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Player_set_speed_return>::get_type_code() {
	return vnx::vnx_native_type_code_Player_set_speed_return;
}

void type<::vnx::Player_set_speed_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Player_set_speed_return());
}

void type<::vnx::Player_set_speed_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Player_set_speed_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Player_stop>::get_type_code() {
	return vnx::vnx_native_type_code_Player_stop;
}

void type<::vnx::Player_stop>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Player_stop());
}

void type<::vnx::Player_stop>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Player_stop& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Player_stop_return>::get_type_code() {
	return vnx::vnx_native_type_code_Player_stop_return;
}

void type<::vnx::Player_stop_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Player_stop_return());
}

void type<::vnx::Player_stop_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Player_stop_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Player_toggle>::get_type_code() {
	return vnx::vnx_native_type_code_Player_toggle;
}

void type<::vnx::Player_toggle>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Player_toggle());
}

void type<::vnx::Player_toggle>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Player_toggle& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Player_toggle_return>::get_type_code() {
	return vnx::vnx_native_type_code_Player_toggle_return;
}

void type<::vnx::Player_toggle_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Player_toggle_return());
}

void type<::vnx::Player_toggle_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Player_toggle_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::PlayerStatus>::get_type_code() {
	return vnx::vnx_native_type_code_PlayerStatus;
}

void type<::vnx::PlayerStatus>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::PlayerStatus());
}

void type<::vnx::PlayerStatus>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::PlayerStatus& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_get_global_config>::get_type_code() {
	return vnx::vnx_native_type_code_Process_get_global_config;
}

void type<::vnx::Process_get_global_config>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_get_global_config());
}

void type<::vnx::Process_get_global_config>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_get_global_config& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_get_global_config_return>::get_type_code() {
	return vnx::vnx_native_type_code_Process_get_global_config_return;
}

void type<::vnx::Process_get_global_config_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_get_global_config_return());
}

void type<::vnx::Process_get_global_config_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_get_global_config_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_get_module_info>::get_type_code() {
	return vnx::vnx_native_type_code_Process_get_module_info;
}

void type<::vnx::Process_get_module_info>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_get_module_info());
}

void type<::vnx::Process_get_module_info>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_get_module_info& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_get_module_info_return>::get_type_code() {
	return vnx::vnx_native_type_code_Process_get_module_info_return;
}

void type<::vnx::Process_get_module_info_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_get_module_info_return());
}

void type<::vnx::Process_get_module_info_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_get_module_info_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_get_name>::get_type_code() {
	return vnx::vnx_native_type_code_Process_get_name;
}

void type<::vnx::Process_get_name>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_get_name());
}

void type<::vnx::Process_get_name>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_get_name& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_get_name_return>::get_type_code() {
	return vnx::vnx_native_type_code_Process_get_name_return;
}

void type<::vnx::Process_get_name_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_get_name_return());
}

void type<::vnx::Process_get_name_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_get_name_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_get_process_info>::get_type_code() {
	return vnx::vnx_native_type_code_Process_get_process_info;
}

void type<::vnx::Process_get_process_info>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_get_process_info());
}

void type<::vnx::Process_get_process_info>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_get_process_info& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_get_process_info_return>::get_type_code() {
	return vnx::vnx_native_type_code_Process_get_process_info_return;
}

void type<::vnx::Process_get_process_info_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_get_process_info_return());
}

void type<::vnx::Process_get_process_info_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_get_process_info_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_get_sync_time>::get_type_code() {
	return vnx::vnx_native_type_code_Process_get_sync_time;
}

void type<::vnx::Process_get_sync_time>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_get_sync_time());
}

void type<::vnx::Process_get_sync_time>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_get_sync_time& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_get_sync_time_return>::get_type_code() {
	return vnx::vnx_native_type_code_Process_get_sync_time_return;
}

void type<::vnx::Process_get_sync_time_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_get_sync_time_return());
}

void type<::vnx::Process_get_sync_time_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_get_sync_time_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_get_topic_info>::get_type_code() {
	return vnx::vnx_native_type_code_Process_get_topic_info;
}

void type<::vnx::Process_get_topic_info>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_get_topic_info());
}

void type<::vnx::Process_get_topic_info>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_get_topic_info& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_get_topic_info_return>::get_type_code() {
	return vnx::vnx_native_type_code_Process_get_topic_info_return;
}

void type<::vnx::Process_get_topic_info_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_get_topic_info_return());
}

void type<::vnx::Process_get_topic_info_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_get_topic_info_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_grep_log>::get_type_code() {
	return vnx::vnx_native_type_code_Process_grep_log;
}

void type<::vnx::Process_grep_log>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_grep_log());
}

void type<::vnx::Process_grep_log>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_grep_log& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_grep_log_return>::get_type_code() {
	return vnx::vnx_native_type_code_Process_grep_log_return;
}

void type<::vnx::Process_grep_log_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_grep_log_return());
}

void type<::vnx::Process_grep_log_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_grep_log_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_journal_log>::get_type_code() {
	return vnx::vnx_native_type_code_Process_journal_log;
}

void type<::vnx::Process_journal_log>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_journal_log());
}

void type<::vnx::Process_journal_log>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_journal_log& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_journal_log_return>::get_type_code() {
	return vnx::vnx_native_type_code_Process_journal_log_return;
}

void type<::vnx::Process_journal_log_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_journal_log_return());
}

void type<::vnx::Process_journal_log_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_journal_log_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_pause_log>::get_type_code() {
	return vnx::vnx_native_type_code_Process_pause_log;
}

void type<::vnx::Process_pause_log>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_pause_log());
}

void type<::vnx::Process_pause_log>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_pause_log& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_pause_log_return>::get_type_code() {
	return vnx::vnx_native_type_code_Process_pause_log_return;
}

void type<::vnx::Process_pause_log_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_pause_log_return());
}

void type<::vnx::Process_pause_log_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_pause_log_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_reload_config>::get_type_code() {
	return vnx::vnx_native_type_code_Process_reload_config;
}

void type<::vnx::Process_reload_config>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_reload_config());
}

void type<::vnx::Process_reload_config>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_reload_config& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_reload_config_return>::get_type_code() {
	return vnx::vnx_native_type_code_Process_reload_config_return;
}

void type<::vnx::Process_reload_config_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_reload_config_return());
}

void type<::vnx::Process_reload_config_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_reload_config_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_resume_log>::get_type_code() {
	return vnx::vnx_native_type_code_Process_resume_log;
}

void type<::vnx::Process_resume_log>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_resume_log());
}

void type<::vnx::Process_resume_log>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_resume_log& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_resume_log_return>::get_type_code() {
	return vnx::vnx_native_type_code_Process_resume_log_return;
}

void type<::vnx::Process_resume_log_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_resume_log_return());
}

void type<::vnx::Process_resume_log_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_resume_log_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_self_test_all>::get_type_code() {
	return vnx::vnx_native_type_code_Process_self_test_all;
}

void type<::vnx::Process_self_test_all>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_self_test_all());
}

void type<::vnx::Process_self_test_all>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_self_test_all& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_self_test_all_return>::get_type_code() {
	return vnx::vnx_native_type_code_Process_self_test_all_return;
}

void type<::vnx::Process_self_test_all_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_self_test_all_return());
}

void type<::vnx::Process_self_test_all_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_self_test_all_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_set_debug>::get_type_code() {
	return vnx::vnx_native_type_code_Process_set_debug;
}

void type<::vnx::Process_set_debug>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_set_debug());
}

void type<::vnx::Process_set_debug>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_set_debug& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_set_debug_return>::get_type_code() {
	return vnx::vnx_native_type_code_Process_set_debug_return;
}

void type<::vnx::Process_set_debug_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_set_debug_return());
}

void type<::vnx::Process_set_debug_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_set_debug_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_set_global_config>::get_type_code() {
	return vnx::vnx_native_type_code_Process_set_global_config;
}

void type<::vnx::Process_set_global_config>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_set_global_config());
}

void type<::vnx::Process_set_global_config>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_set_global_config& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_set_global_config_return>::get_type_code() {
	return vnx::vnx_native_type_code_Process_set_global_config_return;
}

void type<::vnx::Process_set_global_config_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_set_global_config_return());
}

void type<::vnx::Process_set_global_config_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_set_global_config_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_show_error_log>::get_type_code() {
	return vnx::vnx_native_type_code_Process_show_error_log;
}

void type<::vnx::Process_show_error_log>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_show_error_log());
}

void type<::vnx::Process_show_error_log>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_show_error_log& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_show_error_log_return>::get_type_code() {
	return vnx::vnx_native_type_code_Process_show_error_log_return;
}

void type<::vnx::Process_show_error_log_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_show_error_log_return());
}

void type<::vnx::Process_show_error_log_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_show_error_log_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_trigger_shutdown>::get_type_code() {
	return vnx::vnx_native_type_code_Process_trigger_shutdown;
}

void type<::vnx::Process_trigger_shutdown>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_trigger_shutdown());
}

void type<::vnx::Process_trigger_shutdown>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_trigger_shutdown& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_trigger_shutdown_return>::get_type_code() {
	return vnx::vnx_native_type_code_Process_trigger_shutdown_return;
}

void type<::vnx::Process_trigger_shutdown_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_trigger_shutdown_return());
}

void type<::vnx::Process_trigger_shutdown_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_trigger_shutdown_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_ungrep_log>::get_type_code() {
	return vnx::vnx_native_type_code_Process_ungrep_log;
}

void type<::vnx::Process_ungrep_log>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_ungrep_log());
}

void type<::vnx::Process_ungrep_log>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_ungrep_log& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Process_ungrep_log_return>::get_type_code() {
	return vnx::vnx_native_type_code_Process_ungrep_log_return;
}

void type<::vnx::Process_ungrep_log_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Process_ungrep_log_return());
}

void type<::vnx::Process_ungrep_log_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Process_ungrep_log_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProcessInfo>::get_type_code() {
	return vnx::vnx_native_type_code_ProcessInfo;
}

void type<::vnx::ProcessInfo>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProcessInfo());
}

void type<::vnx::ProcessInfo>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProcessInfo& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_disable_export>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_disable_export;
}

void type<::vnx::ProxyInterface_disable_export>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_disable_export());
}

void type<::vnx::ProxyInterface_disable_export>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_disable_export& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_disable_export_return>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_disable_export_return;
}

void type<::vnx::ProxyInterface_disable_export_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_disable_export_return());
}

void type<::vnx::ProxyInterface_disable_export_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_disable_export_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_disable_forward>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_disable_forward;
}

void type<::vnx::ProxyInterface_disable_forward>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_disable_forward());
}

void type<::vnx::ProxyInterface_disable_forward>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_disable_forward& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_disable_forward_return>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_disable_forward_return;
}

void type<::vnx::ProxyInterface_disable_forward_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_disable_forward_return());
}

void type<::vnx::ProxyInterface_disable_forward_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_disable_forward_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_disable_import>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_disable_import;
}

void type<::vnx::ProxyInterface_disable_import>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_disable_import());
}

void type<::vnx::ProxyInterface_disable_import>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_disable_import& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_disable_import_return>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_disable_import_return;
}

void type<::vnx::ProxyInterface_disable_import_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_disable_import_return());
}

void type<::vnx::ProxyInterface_disable_import_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_disable_import_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_disable_tunnel>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_disable_tunnel;
}

void type<::vnx::ProxyInterface_disable_tunnel>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_disable_tunnel());
}

void type<::vnx::ProxyInterface_disable_tunnel>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_disable_tunnel& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_disable_tunnel_return>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_disable_tunnel_return;
}

void type<::vnx::ProxyInterface_disable_tunnel_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_disable_tunnel_return());
}

void type<::vnx::ProxyInterface_disable_tunnel_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_disable_tunnel_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_enable_export>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_enable_export;
}

void type<::vnx::ProxyInterface_enable_export>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_enable_export());
}

void type<::vnx::ProxyInterface_enable_export>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_enable_export& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_enable_export_return>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_enable_export_return;
}

void type<::vnx::ProxyInterface_enable_export_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_enable_export_return());
}

void type<::vnx::ProxyInterface_enable_export_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_enable_export_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_enable_forward>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_enable_forward;
}

void type<::vnx::ProxyInterface_enable_forward>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_enable_forward());
}

void type<::vnx::ProxyInterface_enable_forward>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_enable_forward& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_enable_forward_return>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_enable_forward_return;
}

void type<::vnx::ProxyInterface_enable_forward_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_enable_forward_return());
}

void type<::vnx::ProxyInterface_enable_forward_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_enable_forward_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_enable_import>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_enable_import;
}

void type<::vnx::ProxyInterface_enable_import>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_enable_import());
}

void type<::vnx::ProxyInterface_enable_import>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_enable_import& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_enable_import_return>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_enable_import_return;
}

void type<::vnx::ProxyInterface_enable_import_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_enable_import_return());
}

void type<::vnx::ProxyInterface_enable_import_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_enable_import_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_enable_tunnel>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_enable_tunnel;
}

void type<::vnx::ProxyInterface_enable_tunnel>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_enable_tunnel());
}

void type<::vnx::ProxyInterface_enable_tunnel>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_enable_tunnel& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_enable_tunnel_return>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_enable_tunnel_return;
}

void type<::vnx::ProxyInterface_enable_tunnel_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_enable_tunnel_return());
}

void type<::vnx::ProxyInterface_enable_tunnel_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_enable_tunnel_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_get_session>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_get_session;
}

void type<::vnx::ProxyInterface_get_session>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_get_session());
}

void type<::vnx::ProxyInterface_get_session>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_get_session& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_get_session_return>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_get_session_return;
}

void type<::vnx::ProxyInterface_get_session_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_get_session_return());
}

void type<::vnx::ProxyInterface_get_session_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_get_session_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_login>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_login;
}

void type<::vnx::ProxyInterface_login>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_login());
}

void type<::vnx::ProxyInterface_login>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_login& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_login_return>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_login_return;
}

void type<::vnx::ProxyInterface_login_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_login_return());
}

void type<::vnx::ProxyInterface_login_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_login_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_on_connect>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_on_connect;
}

void type<::vnx::ProxyInterface_on_connect>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_on_connect());
}

void type<::vnx::ProxyInterface_on_connect>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_on_connect& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_on_connect_return>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_on_connect_return;
}

void type<::vnx::ProxyInterface_on_connect_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_on_connect_return());
}

void type<::vnx::ProxyInterface_on_connect_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_on_connect_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_on_disconnect>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_on_disconnect;
}

void type<::vnx::ProxyInterface_on_disconnect>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_on_disconnect());
}

void type<::vnx::ProxyInterface_on_disconnect>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_on_disconnect& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_on_disconnect_return>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_on_disconnect_return;
}

void type<::vnx::ProxyInterface_on_disconnect_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_on_disconnect_return());
}

void type<::vnx::ProxyInterface_on_disconnect_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_on_disconnect_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_on_login>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_on_login;
}

void type<::vnx::ProxyInterface_on_login>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_on_login());
}

void type<::vnx::ProxyInterface_on_login>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_on_login& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_on_login_return>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_on_login_return;
}

void type<::vnx::ProxyInterface_on_login_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_on_login_return());
}

void type<::vnx::ProxyInterface_on_login_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_on_login_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_on_remote_connect>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_on_remote_connect;
}

void type<::vnx::ProxyInterface_on_remote_connect>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_on_remote_connect());
}

void type<::vnx::ProxyInterface_on_remote_connect>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_on_remote_connect& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_on_remote_connect_return>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_on_remote_connect_return;
}

void type<::vnx::ProxyInterface_on_remote_connect_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_on_remote_connect_return());
}

void type<::vnx::ProxyInterface_on_remote_connect_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_on_remote_connect_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_on_remote_login>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_on_remote_login;
}

void type<::vnx::ProxyInterface_on_remote_login>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_on_remote_login());
}

void type<::vnx::ProxyInterface_on_remote_login>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_on_remote_login& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_on_remote_login_return>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_on_remote_login_return;
}

void type<::vnx::ProxyInterface_on_remote_login_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_on_remote_login_return());
}

void type<::vnx::ProxyInterface_on_remote_login_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_on_remote_login_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_wait_on_connect>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_wait_on_connect;
}

void type<::vnx::ProxyInterface_wait_on_connect>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_wait_on_connect());
}

void type<::vnx::ProxyInterface_wait_on_connect>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_wait_on_connect& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_wait_on_connect_return>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_wait_on_connect_return;
}

void type<::vnx::ProxyInterface_wait_on_connect_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_wait_on_connect_return());
}

void type<::vnx::ProxyInterface_wait_on_connect_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_wait_on_connect_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_wait_on_disconnect>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_wait_on_disconnect;
}

void type<::vnx::ProxyInterface_wait_on_disconnect>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_wait_on_disconnect());
}

void type<::vnx::ProxyInterface_wait_on_disconnect>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_wait_on_disconnect& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::ProxyInterface_wait_on_disconnect_return>::get_type_code() {
	return vnx::vnx_native_type_code_ProxyInterface_wait_on_disconnect_return;
}

void type<::vnx::ProxyInterface_wait_on_disconnect_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::ProxyInterface_wait_on_disconnect_return());
}

void type<::vnx::ProxyInterface_wait_on_disconnect_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::ProxyInterface_wait_on_disconnect_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::RecordHeader>::get_type_code() {
	return vnx::vnx_native_type_code_RecordHeader;
}

void type<::vnx::RecordHeader>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::RecordHeader());
}

void type<::vnx::RecordHeader>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::RecordHeader& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::RecordIndex>::get_type_code() {
	return vnx::vnx_native_type_code_RecordIndex;
}

void type<::vnx::RecordIndex>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::RecordIndex());
}

void type<::vnx::RecordIndex>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::RecordIndex& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::RecordPointer>::get_type_code() {
	return vnx::vnx_native_type_code_RecordPointer;
}

void type<::vnx::RecordPointer>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::RecordPointer());
}

void type<::vnx::RecordPointer>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::RecordPointer& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::RecorderStatus>::get_type_code() {
	return vnx::vnx_native_type_code_RecorderStatus;
}

void type<::vnx::RecorderStatus>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::RecorderStatus());
}

void type<::vnx::RecorderStatus>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::RecorderStatus& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Request>::get_type_code() {
	return vnx::vnx_native_type_code_Request;
}

void type<::vnx::Request>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Request());
}

void type<::vnx::Request>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Request& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::RequestQueue_clear>::get_type_code() {
	return vnx::vnx_native_type_code_RequestQueue_clear;
}

void type<::vnx::RequestQueue_clear>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::RequestQueue_clear());
}

void type<::vnx::RequestQueue_clear>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::RequestQueue_clear& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::RequestQueue_clear_return>::get_type_code() {
	return vnx::vnx_native_type_code_RequestQueue_clear_return;
}

void type<::vnx::RequestQueue_clear_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::RequestQueue_clear_return());
}

void type<::vnx::RequestQueue_clear_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::RequestQueue_clear_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::RequestQueue_purge>::get_type_code() {
	return vnx::vnx_native_type_code_RequestQueue_purge;
}

void type<::vnx::RequestQueue_purge>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::RequestQueue_purge());
}

void type<::vnx::RequestQueue_purge>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::RequestQueue_purge& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::RequestQueue_purge_return>::get_type_code() {
	return vnx::vnx_native_type_code_RequestQueue_purge_return;
}

void type<::vnx::RequestQueue_purge_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::RequestQueue_purge_return());
}

void type<::vnx::RequestQueue_purge_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::RequestQueue_purge_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Return>::get_type_code() {
	return vnx::vnx_native_type_code_Return;
}

void type<::vnx::Return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Return());
}

void type<::vnx::Return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Sample>::get_type_code() {
	return vnx::vnx_native_type_code_Sample;
}

void type<::vnx::Sample>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Sample());
}

void type<::vnx::Sample>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Sample& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Session>::get_type_code() {
	return vnx::vnx_native_type_code_Session;
}

void type<::vnx::Session>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Session());
}

void type<::vnx::Session>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Session& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Session_has_permission>::get_type_code() {
	return vnx::vnx_native_type_code_Session_has_permission;
}

void type<::vnx::Session_has_permission>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Session_has_permission());
}

void type<::vnx::Session_has_permission>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Session_has_permission& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Session_has_permission_return>::get_type_code() {
	return vnx::vnx_native_type_code_Session_has_permission_return;
}

void type<::vnx::Session_has_permission_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Session_has_permission_return());
}

void type<::vnx::Session_has_permission_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Session_has_permission_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Session_has_permission_vnx>::get_type_code() {
	return vnx::vnx_native_type_code_Session_has_permission_vnx;
}

void type<::vnx::Session_has_permission_vnx>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Session_has_permission_vnx());
}

void type<::vnx::Session_has_permission_vnx>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Session_has_permission_vnx& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Session_has_permission_vnx_return>::get_type_code() {
	return vnx::vnx_native_type_code_Session_has_permission_vnx_return;
}

void type<::vnx::Session_has_permission_vnx_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Session_has_permission_vnx_return());
}

void type<::vnx::Session_has_permission_vnx_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Session_has_permission_vnx_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Session_is_anonymous>::get_type_code() {
	return vnx::vnx_native_type_code_Session_is_anonymous;
}

void type<::vnx::Session_is_anonymous>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Session_is_anonymous());
}

void type<::vnx::Session_is_anonymous>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Session_is_anonymous& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Session_is_anonymous_return>::get_type_code() {
	return vnx::vnx_native_type_code_Session_is_anonymous_return;
}

void type<::vnx::Session_is_anonymous_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Session_is_anonymous_return());
}

void type<::vnx::Session_is_anonymous_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Session_is_anonymous_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::TcpEndpoint>::get_type_code() {
	return vnx::vnx_native_type_code_TcpEndpoint;
}

void type<::vnx::TcpEndpoint>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::TcpEndpoint());
}

void type<::vnx::TcpEndpoint>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::TcpEndpoint& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::TcpEndpoint_accept>::get_type_code() {
	return vnx::vnx_native_type_code_TcpEndpoint_accept;
}

void type<::vnx::TcpEndpoint_accept>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::TcpEndpoint_accept());
}

void type<::vnx::TcpEndpoint_accept>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::TcpEndpoint_accept& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::TcpEndpoint_accept_return>::get_type_code() {
	return vnx::vnx_native_type_code_TcpEndpoint_accept_return;
}

void type<::vnx::TcpEndpoint_accept_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::TcpEndpoint_accept_return());
}

void type<::vnx::TcpEndpoint_accept_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::TcpEndpoint_accept_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::TcpEndpoint_bind>::get_type_code() {
	return vnx::vnx_native_type_code_TcpEndpoint_bind;
}

void type<::vnx::TcpEndpoint_bind>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::TcpEndpoint_bind());
}

void type<::vnx::TcpEndpoint_bind>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::TcpEndpoint_bind& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::TcpEndpoint_bind_return>::get_type_code() {
	return vnx::vnx_native_type_code_TcpEndpoint_bind_return;
}

void type<::vnx::TcpEndpoint_bind_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::TcpEndpoint_bind_return());
}

void type<::vnx::TcpEndpoint_bind_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::TcpEndpoint_bind_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::TcpEndpoint_close>::get_type_code() {
	return vnx::vnx_native_type_code_TcpEndpoint_close;
}

void type<::vnx::TcpEndpoint_close>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::TcpEndpoint_close());
}

void type<::vnx::TcpEndpoint_close>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::TcpEndpoint_close& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::TcpEndpoint_close_return>::get_type_code() {
	return vnx::vnx_native_type_code_TcpEndpoint_close_return;
}

void type<::vnx::TcpEndpoint_close_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::TcpEndpoint_close_return());
}

void type<::vnx::TcpEndpoint_close_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::TcpEndpoint_close_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::TcpEndpoint_connect>::get_type_code() {
	return vnx::vnx_native_type_code_TcpEndpoint_connect;
}

void type<::vnx::TcpEndpoint_connect>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::TcpEndpoint_connect());
}

void type<::vnx::TcpEndpoint_connect>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::TcpEndpoint_connect& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::TcpEndpoint_connect_return>::get_type_code() {
	return vnx::vnx_native_type_code_TcpEndpoint_connect_return;
}

void type<::vnx::TcpEndpoint_connect_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::TcpEndpoint_connect_return());
}

void type<::vnx::TcpEndpoint_connect_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::TcpEndpoint_connect_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::TcpEndpoint_listen>::get_type_code() {
	return vnx::vnx_native_type_code_TcpEndpoint_listen;
}

void type<::vnx::TcpEndpoint_listen>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::TcpEndpoint_listen());
}

void type<::vnx::TcpEndpoint_listen>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::TcpEndpoint_listen& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::TcpEndpoint_listen_return>::get_type_code() {
	return vnx::vnx_native_type_code_TcpEndpoint_listen_return;
}

void type<::vnx::TcpEndpoint_listen_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::TcpEndpoint_listen_return());
}

void type<::vnx::TcpEndpoint_listen_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::TcpEndpoint_listen_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::TcpEndpoint_open>::get_type_code() {
	return vnx::vnx_native_type_code_TcpEndpoint_open;
}

void type<::vnx::TcpEndpoint_open>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::TcpEndpoint_open());
}

void type<::vnx::TcpEndpoint_open>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::TcpEndpoint_open& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::TcpEndpoint_open_return>::get_type_code() {
	return vnx::vnx_native_type_code_TcpEndpoint_open_return;
}

void type<::vnx::TcpEndpoint_open_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::TcpEndpoint_open_return());
}

void type<::vnx::TcpEndpoint_open_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::TcpEndpoint_open_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::TcpEndpoint_set_options>::get_type_code() {
	return vnx::vnx_native_type_code_TcpEndpoint_set_options;
}

void type<::vnx::TcpEndpoint_set_options>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::TcpEndpoint_set_options());
}

void type<::vnx::TcpEndpoint_set_options>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::TcpEndpoint_set_options& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::TcpEndpoint_set_options_return>::get_type_code() {
	return vnx::vnx_native_type_code_TcpEndpoint_set_options_return;
}

void type<::vnx::TcpEndpoint_set_options_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::TcpEndpoint_set_options_return());
}

void type<::vnx::TcpEndpoint_set_options_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::TcpEndpoint_set_options_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::TcpEndpoint_shutdown>::get_type_code() {
	return vnx::vnx_native_type_code_TcpEndpoint_shutdown;
}

void type<::vnx::TcpEndpoint_shutdown>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::TcpEndpoint_shutdown());
}

void type<::vnx::TcpEndpoint_shutdown>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::TcpEndpoint_shutdown& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::TcpEndpoint_shutdown_return>::get_type_code() {
	return vnx::vnx_native_type_code_TcpEndpoint_shutdown_return;
}

void type<::vnx::TcpEndpoint_shutdown_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::TcpEndpoint_shutdown_return());
}

void type<::vnx::TcpEndpoint_shutdown_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::TcpEndpoint_shutdown_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::TcpEndpoint_to_url>::get_type_code() {
	return vnx::vnx_native_type_code_TcpEndpoint_to_url;
}

void type<::vnx::TcpEndpoint_to_url>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::TcpEndpoint_to_url());
}

void type<::vnx::TcpEndpoint_to_url>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::TcpEndpoint_to_url& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::TcpEndpoint_to_url_return>::get_type_code() {
	return vnx::vnx_native_type_code_TcpEndpoint_to_url_return;
}

void type<::vnx::TcpEndpoint_to_url_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::TcpEndpoint_to_url_return());
}

void type<::vnx::TcpEndpoint_to_url_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::TcpEndpoint_to_url_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Terminal_read_char>::get_type_code() {
	return vnx::vnx_native_type_code_Terminal_read_char;
}

void type<::vnx::Terminal_read_char>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Terminal_read_char());
}

void type<::vnx::Terminal_read_char>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Terminal_read_char& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Terminal_read_char_return>::get_type_code() {
	return vnx::vnx_native_type_code_Terminal_read_char_return;
}

void type<::vnx::Terminal_read_char_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Terminal_read_char_return());
}

void type<::vnx::Terminal_read_char_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Terminal_read_char_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Terminal_read_event>::get_type_code() {
	return vnx::vnx_native_type_code_Terminal_read_event;
}

void type<::vnx::Terminal_read_event>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Terminal_read_event());
}

void type<::vnx::Terminal_read_event>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Terminal_read_event& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Terminal_read_event_return>::get_type_code() {
	return vnx::vnx_native_type_code_Terminal_read_event_return;
}

void type<::vnx::Terminal_read_event_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Terminal_read_event_return());
}

void type<::vnx::Terminal_read_event_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Terminal_read_event_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::TimeControl>::get_type_code() {
	return vnx::vnx_native_type_code_TimeControl;
}

void type<::vnx::TimeControl>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::TimeControl());
}

void type<::vnx::TimeControl>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::TimeControl& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::TimeControl_get_time_micros>::get_type_code() {
	return vnx::vnx_native_type_code_TimeControl_get_time_micros;
}

void type<::vnx::TimeControl_get_time_micros>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::TimeControl_get_time_micros());
}

void type<::vnx::TimeControl_get_time_micros>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::TimeControl_get_time_micros& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::TimeControl_get_time_micros_return>::get_type_code() {
	return vnx::vnx_native_type_code_TimeControl_get_time_micros_return;
}

void type<::vnx::TimeControl_get_time_micros_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::TimeControl_get_time_micros_return());
}

void type<::vnx::TimeControl_get_time_micros_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::TimeControl_get_time_micros_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::TimeSync>::get_type_code() {
	return vnx::vnx_native_type_code_TimeSync;
}

void type<::vnx::TimeSync>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::TimeSync());
}

void type<::vnx::TimeSync>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::TimeSync& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::TimeSync_get_time_micros>::get_type_code() {
	return vnx::vnx_native_type_code_TimeSync_get_time_micros;
}

void type<::vnx::TimeSync_get_time_micros>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::TimeSync_get_time_micros());
}

void type<::vnx::TimeSync_get_time_micros>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::TimeSync_get_time_micros& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::TimeSync_get_time_micros_return>::get_type_code() {
	return vnx::vnx_native_type_code_TimeSync_get_time_micros_return;
}

void type<::vnx::TimeSync_get_time_micros_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::TimeSync_get_time_micros_return());
}

void type<::vnx::TimeSync_get_time_micros_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::TimeSync_get_time_micros_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::TopicInfo>::get_type_code() {
	return vnx::vnx_native_type_code_TopicInfo;
}

void type<::vnx::TopicInfo>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::TopicInfo());
}

void type<::vnx::TopicInfo>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::TopicInfo& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::TopicInfoList>::get_type_code() {
	return vnx::vnx_native_type_code_TopicInfoList;
}

void type<::vnx::TopicInfoList>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::TopicInfoList());
}

void type<::vnx::TopicInfoList>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::TopicInfoList& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::TopicPtr>::get_type_code() {
	return nullptr;
}

void type<::vnx::TopicPtr>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::TopicPtr());
}

void type<::vnx::TopicPtr>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::TopicPtr& value, bool special) {
	const std::vector<int> tmp = {12, 5};
	code.insert(code.end(), tmp.begin(), tmp.end());}

const TypeCode* type<::vnx::Tuple>::get_type_code() {
	return vnx::vnx_native_type_code_Tuple;
}

void type<::vnx::Tuple>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Tuple());
}

void type<::vnx::Tuple>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Tuple& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Tuple_get_field_by_index>::get_type_code() {
	return vnx::vnx_native_type_code_Tuple_get_field_by_index;
}

void type<::vnx::Tuple_get_field_by_index>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Tuple_get_field_by_index());
}

void type<::vnx::Tuple_get_field_by_index>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Tuple_get_field_by_index& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Tuple_get_field_by_index_return>::get_type_code() {
	return vnx::vnx_native_type_code_Tuple_get_field_by_index_return;
}

void type<::vnx::Tuple_get_field_by_index_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Tuple_get_field_by_index_return());
}

void type<::vnx::Tuple_get_field_by_index_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Tuple_get_field_by_index_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Tuple_get_num_fields>::get_type_code() {
	return vnx::vnx_native_type_code_Tuple_get_num_fields;
}

void type<::vnx::Tuple_get_num_fields>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Tuple_get_num_fields());
}

void type<::vnx::Tuple_get_num_fields>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Tuple_get_num_fields& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Tuple_get_num_fields_return>::get_type_code() {
	return vnx::vnx_native_type_code_Tuple_get_num_fields_return;
}

void type<::vnx::Tuple_get_num_fields_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Tuple_get_num_fields_return());
}

void type<::vnx::Tuple_get_num_fields_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Tuple_get_num_fields_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Tuple_set_field_by_index>::get_type_code() {
	return vnx::vnx_native_type_code_Tuple_set_field_by_index;
}

void type<::vnx::Tuple_set_field_by_index>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Tuple_set_field_by_index());
}

void type<::vnx::Tuple_set_field_by_index>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Tuple_set_field_by_index& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Tuple_set_field_by_index_return>::get_type_code() {
	return vnx::vnx_native_type_code_Tuple_set_field_by_index_return;
}

void type<::vnx::Tuple_set_field_by_index_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Tuple_set_field_by_index_return());
}

void type<::vnx::Tuple_set_field_by_index_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Tuple_set_field_by_index_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::TypeCode>::get_type_code() {
	return nullptr;
}

void type<::vnx::TypeCode>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::TypeCode());
}

void type<::vnx::TypeCode>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::TypeCode& value, bool special) {
	const std::vector<int> tmp = {14};
	code.insert(code.end(), tmp.begin(), tmp.end());}

const TypeCode* type<::vnx::UnixEndpoint>::get_type_code() {
	return vnx::vnx_native_type_code_UnixEndpoint;
}

void type<::vnx::UnixEndpoint>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::UnixEndpoint());
}

void type<::vnx::UnixEndpoint>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::UnixEndpoint& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::UnixEndpoint_accept>::get_type_code() {
	return vnx::vnx_native_type_code_UnixEndpoint_accept;
}

void type<::vnx::UnixEndpoint_accept>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::UnixEndpoint_accept());
}

void type<::vnx::UnixEndpoint_accept>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::UnixEndpoint_accept& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::UnixEndpoint_accept_return>::get_type_code() {
	return vnx::vnx_native_type_code_UnixEndpoint_accept_return;
}

void type<::vnx::UnixEndpoint_accept_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::UnixEndpoint_accept_return());
}

void type<::vnx::UnixEndpoint_accept_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::UnixEndpoint_accept_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::UnixEndpoint_bind>::get_type_code() {
	return vnx::vnx_native_type_code_UnixEndpoint_bind;
}

void type<::vnx::UnixEndpoint_bind>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::UnixEndpoint_bind());
}

void type<::vnx::UnixEndpoint_bind>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::UnixEndpoint_bind& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::UnixEndpoint_bind_return>::get_type_code() {
	return vnx::vnx_native_type_code_UnixEndpoint_bind_return;
}

void type<::vnx::UnixEndpoint_bind_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::UnixEndpoint_bind_return());
}

void type<::vnx::UnixEndpoint_bind_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::UnixEndpoint_bind_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::UnixEndpoint_close>::get_type_code() {
	return vnx::vnx_native_type_code_UnixEndpoint_close;
}

void type<::vnx::UnixEndpoint_close>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::UnixEndpoint_close());
}

void type<::vnx::UnixEndpoint_close>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::UnixEndpoint_close& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::UnixEndpoint_close_return>::get_type_code() {
	return vnx::vnx_native_type_code_UnixEndpoint_close_return;
}

void type<::vnx::UnixEndpoint_close_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::UnixEndpoint_close_return());
}

void type<::vnx::UnixEndpoint_close_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::UnixEndpoint_close_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::UnixEndpoint_connect>::get_type_code() {
	return vnx::vnx_native_type_code_UnixEndpoint_connect;
}

void type<::vnx::UnixEndpoint_connect>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::UnixEndpoint_connect());
}

void type<::vnx::UnixEndpoint_connect>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::UnixEndpoint_connect& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::UnixEndpoint_connect_return>::get_type_code() {
	return vnx::vnx_native_type_code_UnixEndpoint_connect_return;
}

void type<::vnx::UnixEndpoint_connect_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::UnixEndpoint_connect_return());
}

void type<::vnx::UnixEndpoint_connect_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::UnixEndpoint_connect_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::UnixEndpoint_listen>::get_type_code() {
	return vnx::vnx_native_type_code_UnixEndpoint_listen;
}

void type<::vnx::UnixEndpoint_listen>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::UnixEndpoint_listen());
}

void type<::vnx::UnixEndpoint_listen>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::UnixEndpoint_listen& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::UnixEndpoint_listen_return>::get_type_code() {
	return vnx::vnx_native_type_code_UnixEndpoint_listen_return;
}

void type<::vnx::UnixEndpoint_listen_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::UnixEndpoint_listen_return());
}

void type<::vnx::UnixEndpoint_listen_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::UnixEndpoint_listen_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::UnixEndpoint_open>::get_type_code() {
	return vnx::vnx_native_type_code_UnixEndpoint_open;
}

void type<::vnx::UnixEndpoint_open>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::UnixEndpoint_open());
}

void type<::vnx::UnixEndpoint_open>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::UnixEndpoint_open& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::UnixEndpoint_open_return>::get_type_code() {
	return vnx::vnx_native_type_code_UnixEndpoint_open_return;
}

void type<::vnx::UnixEndpoint_open_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::UnixEndpoint_open_return());
}

void type<::vnx::UnixEndpoint_open_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::UnixEndpoint_open_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::UnixEndpoint_set_options>::get_type_code() {
	return vnx::vnx_native_type_code_UnixEndpoint_set_options;
}

void type<::vnx::UnixEndpoint_set_options>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::UnixEndpoint_set_options());
}

void type<::vnx::UnixEndpoint_set_options>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::UnixEndpoint_set_options& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::UnixEndpoint_set_options_return>::get_type_code() {
	return vnx::vnx_native_type_code_UnixEndpoint_set_options_return;
}

void type<::vnx::UnixEndpoint_set_options_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::UnixEndpoint_set_options_return());
}

void type<::vnx::UnixEndpoint_set_options_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::UnixEndpoint_set_options_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::UnixEndpoint_shutdown>::get_type_code() {
	return vnx::vnx_native_type_code_UnixEndpoint_shutdown;
}

void type<::vnx::UnixEndpoint_shutdown>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::UnixEndpoint_shutdown());
}

void type<::vnx::UnixEndpoint_shutdown>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::UnixEndpoint_shutdown& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::UnixEndpoint_shutdown_return>::get_type_code() {
	return vnx::vnx_native_type_code_UnixEndpoint_shutdown_return;
}

void type<::vnx::UnixEndpoint_shutdown_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::UnixEndpoint_shutdown_return());
}

void type<::vnx::UnixEndpoint_shutdown_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::UnixEndpoint_shutdown_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::UnixEndpoint_to_url>::get_type_code() {
	return vnx::vnx_native_type_code_UnixEndpoint_to_url;
}

void type<::vnx::UnixEndpoint_to_url>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::UnixEndpoint_to_url());
}

void type<::vnx::UnixEndpoint_to_url>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::UnixEndpoint_to_url& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::UnixEndpoint_to_url_return>::get_type_code() {
	return vnx::vnx_native_type_code_UnixEndpoint_to_url_return;
}

void type<::vnx::UnixEndpoint_to_url_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::UnixEndpoint_to_url_return());
}

void type<::vnx::UnixEndpoint_to_url_return>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::UnixEndpoint_to_url_return& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::User>::get_type_code() {
	return vnx::vnx_native_type_code_User;
}

void type<::vnx::User>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::User());
}

void type<::vnx::User>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::User& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::Variant>::get_type_code() {
	return nullptr;
}

void type<::vnx::Variant>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::Variant());
}

void type<::vnx::Variant>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::Variant& value, bool special) {
	const std::vector<int> tmp = {17};
	code.insert(code.end(), tmp.begin(), tmp.end());}

const TypeCode* type<::vnx::access_role_e>::get_type_code() {
	return vnx::vnx_native_type_code_access_role_e;
}

void type<::vnx::access_role_e>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::access_role_e());
}

void type<::vnx::access_role_e>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::access_role_e& value, bool special) {
	if(!special || value.is_valid()) {
		code.push_back(CODE_STRING);
	} else {
		code.push_back(CODE_UINT32);
	}
}

const TypeCode* type<::vnx::permission_e>::get_type_code() {
	return vnx::vnx_native_type_code_permission_e;
}

void type<::vnx::permission_e>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::permission_e());
}

void type<::vnx::permission_e>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::permission_e& value, bool special) {
	if(!special || value.is_valid()) {
		code.push_back(CODE_STRING);
	} else {
		code.push_back(CODE_UINT32);
	}
}

const TypeCode* type<::vnx::record_index_entry_t>::get_type_code() {
	return vnx::vnx_native_type_code_record_index_entry_t;
}

void type<::vnx::record_index_entry_t>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::record_index_entry_t());
}

void type<::vnx::record_index_entry_t>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::record_index_entry_t& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::record_topic_info_t>::get_type_code() {
	return vnx::vnx_native_type_code_record_topic_info_t;
}

void type<::vnx::record_topic_info_t>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::record_topic_info_t());
}

void type<::vnx::record_topic_info_t>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::record_topic_info_t& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::vnx::terminal_event_e>::get_type_code() {
	return vnx::vnx_native_type_code_terminal_event_e;
}

void type<::vnx::terminal_event_e>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::terminal_event_e());
}

void type<::vnx::terminal_event_e>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::terminal_event_e& value, bool special) {
	if(!special || value.is_valid()) {
		code.push_back(CODE_STRING);
	} else {
		code.push_back(CODE_UINT32);
	}
}

const TypeCode* type<::vnx::thread_priority_e>::get_type_code() {
	return vnx::vnx_native_type_code_thread_priority_e;
}

void type<::vnx::thread_priority_e>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::thread_priority_e());
}

void type<::vnx::thread_priority_e>::create_dynamic_code(std::vector<uint16_t>& code, const ::vnx::thread_priority_e& value, bool special) {
	if(!special || value.is_valid()) {
		code.push_back(CODE_STRING);
	} else {
		code.push_back(CODE_UINT32);
	}
}


} // namespace vnx


namespace vnx {

vnx::TopicPtr log_out = vnx::get_topic("vnx", "log_out");
vnx::TopicPtr module_info = vnx::get_topic("vnx", "module_info");
vnx::TopicPtr shutdown = vnx::get_topic("vnx", "shutdown");
vnx::TopicPtr time_control = vnx::get_topic("vnx", "time_control");
vnx::TopicPtr time_sync = vnx::get_topic("vnx", "time_sync");
vnx::TopicPtr topic_info = vnx::get_topic("vnx", "topic_info");

static void register_all_types() {
	vnx::register_type_code(::vnx::BaseProxyBase::static_create_type_code());
	vnx::register_type_code(::vnx::BaseServerBase::static_create_type_code());
	vnx::register_type_code(::vnx::Endpoint::static_create_type_code());
	vnx::register_type_code(::vnx::Endpoint_accept::static_create_type_code());
	vnx::register_type_code(::vnx::Endpoint_accept_return::static_create_type_code());
	vnx::register_type_code(::vnx::Endpoint_bind::static_create_type_code());
	vnx::register_type_code(::vnx::Endpoint_bind_return::static_create_type_code());
	vnx::register_type_code(::vnx::Endpoint_connect::static_create_type_code());
	vnx::register_type_code(::vnx::Endpoint_connect_return::static_create_type_code());
	vnx::register_type_code(::vnx::Endpoint_listen::static_create_type_code());
	vnx::register_type_code(::vnx::Endpoint_listen_return::static_create_type_code());
	vnx::register_type_code(::vnx::Endpoint_open::static_create_type_code());
	vnx::register_type_code(::vnx::Endpoint_open_return::static_create_type_code());
	vnx::register_type_code(::vnx::Endpoint_shutdown::static_create_type_code());
	vnx::register_type_code(::vnx::Endpoint_shutdown_return::static_create_type_code());
	vnx::register_type_code(::vnx::Endpoint_to_url::static_create_type_code());
	vnx::register_type_code(::vnx::Endpoint_to_url_return::static_create_type_code());
	vnx::register_type_code(::vnx::Exception::static_create_type_code());
	vnx::register_type_code(::vnx::FlowMessage::static_create_type_code());
	vnx::register_type_code(::vnx::Frame::static_create_type_code());
	vnx::register_type_code(::vnx::GatewayBase::static_create_type_code());
	vnx::register_type_code(::vnx::GatewayInterface_forward::static_create_type_code());
	vnx::register_type_code(::vnx::GatewayInterface_forward_return::static_create_type_code());
	vnx::register_type_code(::vnx::Generic::static_create_type_code());
	vnx::register_type_code(::vnx::InternalError::static_create_type_code());
	vnx::register_type_code(::vnx::JRPC_Error::static_create_type_code());
	vnx::register_type_code(::vnx::JRPC_Failure::static_create_type_code());
	vnx::register_type_code(::vnx::JRPC_Notification::static_create_type_code());
	vnx::register_type_code(::vnx::JRPC_ProxyBase::static_create_type_code());
	vnx::register_type_code(::vnx::JRPC_Proxy_select_service::static_create_type_code());
	vnx::register_type_code(::vnx::JRPC_Proxy_select_service_return::static_create_type_code());
	vnx::register_type_code(::vnx::JRPC_Request::static_create_type_code());
	vnx::register_type_code(::vnx::JRPC_Request_is_notification::static_create_type_code());
	vnx::register_type_code(::vnx::JRPC_Request_is_notification_return::static_create_type_code());
	vnx::register_type_code(::vnx::JRPC_Request_is_request::static_create_type_code());
	vnx::register_type_code(::vnx::JRPC_Request_is_request_return::static_create_type_code());
	vnx::register_type_code(::vnx::JRPC_Request_is_request_object::static_create_type_code());
	vnx::register_type_code(::vnx::JRPC_Request_is_request_object_return::static_create_type_code());
	vnx::register_type_code(::vnx::JRPC_Response::static_create_type_code());
	vnx::register_type_code(::vnx::JRPC_Response_is_response_object::static_create_type_code());
	vnx::register_type_code(::vnx::JRPC_Response_is_response_object_return::static_create_type_code());
	vnx::register_type_code(::vnx::JRPC_ServerBase::static_create_type_code());
	vnx::register_type_code(::vnx::JRPC_Success::static_create_type_code());
	vnx::register_type_code(::vnx::LogMsg::static_create_type_code());
	vnx::register_type_code(::vnx::LogMsg_get_output::static_create_type_code());
	vnx::register_type_code(::vnx::LogMsg_get_output_return::static_create_type_code());
	vnx::register_type_code(::vnx::Marker::static_create_type_code());
	vnx::register_type_code(::vnx::Message::static_create_type_code());
	vnx::register_type_code(::vnx::ModuleInfo::static_create_type_code());
	vnx::register_type_code(::vnx::ModuleInfo_get_cpu_load::static_create_type_code());
	vnx::register_type_code(::vnx::ModuleInfo_get_cpu_load_return::static_create_type_code());
	vnx::register_type_code(::vnx::ModuleInfo_get_cpu_load_total::static_create_type_code());
	vnx::register_type_code(::vnx::ModuleInfo_get_cpu_load_total_return::static_create_type_code());
	vnx::register_type_code(::vnx::ModuleInterface_vnx_get_config::static_create_type_code());
	vnx::register_type_code(::vnx::ModuleInterface_vnx_get_config_return::static_create_type_code());
	vnx::register_type_code(::vnx::ModuleInterface_vnx_get_config_object::static_create_type_code());
	vnx::register_type_code(::vnx::ModuleInterface_vnx_get_config_object_return::static_create_type_code());
	vnx::register_type_code(::vnx::ModuleInterface_vnx_get_module_info::static_create_type_code());
	vnx::register_type_code(::vnx::ModuleInterface_vnx_get_module_info_return::static_create_type_code());
	vnx::register_type_code(::vnx::ModuleInterface_vnx_get_type_code::static_create_type_code());
	vnx::register_type_code(::vnx::ModuleInterface_vnx_get_type_code_return::static_create_type_code());
	vnx::register_type_code(::vnx::ModuleInterface_vnx_restart::static_create_type_code());
	vnx::register_type_code(::vnx::ModuleInterface_vnx_restart_return::static_create_type_code());
	vnx::register_type_code(::vnx::ModuleInterface_vnx_self_test::static_create_type_code());
	vnx::register_type_code(::vnx::ModuleInterface_vnx_self_test_return::static_create_type_code());
	vnx::register_type_code(::vnx::ModuleInterface_vnx_set_config::static_create_type_code());
	vnx::register_type_code(::vnx::ModuleInterface_vnx_set_config_return::static_create_type_code());
	vnx::register_type_code(::vnx::ModuleInterface_vnx_set_config_object::static_create_type_code());
	vnx::register_type_code(::vnx::ModuleInterface_vnx_set_config_object_return::static_create_type_code());
	vnx::register_type_code(::vnx::ModuleInterface_vnx_stop::static_create_type_code());
	vnx::register_type_code(::vnx::ModuleInterface_vnx_stop_return::static_create_type_code());
	vnx::register_type_code(::vnx::NoSuchMethod::static_create_type_code());
	vnx::register_type_code(::vnx::NoSuchService::static_create_type_code());
	vnx::register_type_code(::vnx::OverflowException::static_create_type_code());
	vnx::register_type_code(::vnx::PermissionDenied::static_create_type_code());
	vnx::register_type_code(::vnx::PlayerBase::static_create_type_code());
	vnx::register_type_code(::vnx::Player_get_info::static_create_type_code());
	vnx::register_type_code(::vnx::Player_get_info_return::static_create_type_code());
	vnx::register_type_code(::vnx::Player_pause::static_create_type_code());
	vnx::register_type_code(::vnx::Player_pause_return::static_create_type_code());
	vnx::register_type_code(::vnx::Player_play::static_create_type_code());
	vnx::register_type_code(::vnx::Player_play_return::static_create_type_code());
	vnx::register_type_code(::vnx::Player_seek_by_count::static_create_type_code());
	vnx::register_type_code(::vnx::Player_seek_by_count_return::static_create_type_code());
	vnx::register_type_code(::vnx::Player_seek_by_time::static_create_type_code());
	vnx::register_type_code(::vnx::Player_seek_by_time_return::static_create_type_code());
	vnx::register_type_code(::vnx::Player_seek_to_position::static_create_type_code());
	vnx::register_type_code(::vnx::Player_seek_to_position_return::static_create_type_code());
	vnx::register_type_code(::vnx::Player_seek_to_time::static_create_type_code());
	vnx::register_type_code(::vnx::Player_seek_to_time_return::static_create_type_code());
	vnx::register_type_code(::vnx::Player_set_speed::static_create_type_code());
	vnx::register_type_code(::vnx::Player_set_speed_return::static_create_type_code());
	vnx::register_type_code(::vnx::Player_stop::static_create_type_code());
	vnx::register_type_code(::vnx::Player_stop_return::static_create_type_code());
	vnx::register_type_code(::vnx::Player_toggle::static_create_type_code());
	vnx::register_type_code(::vnx::Player_toggle_return::static_create_type_code());
	vnx::register_type_code(::vnx::PlayerStatus::static_create_type_code());
	vnx::register_type_code(::vnx::ProcessBase::static_create_type_code());
	vnx::register_type_code(::vnx::Process_get_global_config::static_create_type_code());
	vnx::register_type_code(::vnx::Process_get_global_config_return::static_create_type_code());
	vnx::register_type_code(::vnx::Process_get_module_info::static_create_type_code());
	vnx::register_type_code(::vnx::Process_get_module_info_return::static_create_type_code());
	vnx::register_type_code(::vnx::Process_get_name::static_create_type_code());
	vnx::register_type_code(::vnx::Process_get_name_return::static_create_type_code());
	vnx::register_type_code(::vnx::Process_get_process_info::static_create_type_code());
	vnx::register_type_code(::vnx::Process_get_process_info_return::static_create_type_code());
	vnx::register_type_code(::vnx::Process_get_sync_time::static_create_type_code());
	vnx::register_type_code(::vnx::Process_get_sync_time_return::static_create_type_code());
	vnx::register_type_code(::vnx::Process_get_topic_info::static_create_type_code());
	vnx::register_type_code(::vnx::Process_get_topic_info_return::static_create_type_code());
	vnx::register_type_code(::vnx::Process_grep_log::static_create_type_code());
	vnx::register_type_code(::vnx::Process_grep_log_return::static_create_type_code());
	vnx::register_type_code(::vnx::Process_journal_log::static_create_type_code());
	vnx::register_type_code(::vnx::Process_journal_log_return::static_create_type_code());
	vnx::register_type_code(::vnx::Process_pause_log::static_create_type_code());
	vnx::register_type_code(::vnx::Process_pause_log_return::static_create_type_code());
	vnx::register_type_code(::vnx::Process_reload_config::static_create_type_code());
	vnx::register_type_code(::vnx::Process_reload_config_return::static_create_type_code());
	vnx::register_type_code(::vnx::Process_resume_log::static_create_type_code());
	vnx::register_type_code(::vnx::Process_resume_log_return::static_create_type_code());
	vnx::register_type_code(::vnx::Process_self_test_all::static_create_type_code());
	vnx::register_type_code(::vnx::Process_self_test_all_return::static_create_type_code());
	vnx::register_type_code(::vnx::Process_set_debug::static_create_type_code());
	vnx::register_type_code(::vnx::Process_set_debug_return::static_create_type_code());
	vnx::register_type_code(::vnx::Process_set_global_config::static_create_type_code());
	vnx::register_type_code(::vnx::Process_set_global_config_return::static_create_type_code());
	vnx::register_type_code(::vnx::Process_show_error_log::static_create_type_code());
	vnx::register_type_code(::vnx::Process_show_error_log_return::static_create_type_code());
	vnx::register_type_code(::vnx::Process_trigger_shutdown::static_create_type_code());
	vnx::register_type_code(::vnx::Process_trigger_shutdown_return::static_create_type_code());
	vnx::register_type_code(::vnx::Process_ungrep_log::static_create_type_code());
	vnx::register_type_code(::vnx::Process_ungrep_log_return::static_create_type_code());
	vnx::register_type_code(::vnx::ProcessInfo::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyBase::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_disable_export::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_disable_export_return::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_disable_forward::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_disable_forward_return::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_disable_import::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_disable_import_return::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_disable_tunnel::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_disable_tunnel_return::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_enable_export::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_enable_export_return::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_enable_forward::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_enable_forward_return::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_enable_import::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_enable_import_return::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_enable_tunnel::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_enable_tunnel_return::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_get_session::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_get_session_return::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_login::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_login_return::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_on_connect::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_on_connect_return::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_on_disconnect::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_on_disconnect_return::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_on_login::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_on_login_return::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_on_remote_connect::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_on_remote_connect_return::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_on_remote_login::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_on_remote_login_return::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_wait_on_connect::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_wait_on_connect_return::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_wait_on_disconnect::static_create_type_code());
	vnx::register_type_code(::vnx::ProxyInterface_wait_on_disconnect_return::static_create_type_code());
	vnx::register_type_code(::vnx::RecordHeader::static_create_type_code());
	vnx::register_type_code(::vnx::RecordIndex::static_create_type_code());
	vnx::register_type_code(::vnx::RecordPointer::static_create_type_code());
	vnx::register_type_code(::vnx::RecorderBase::static_create_type_code());
	vnx::register_type_code(::vnx::RecorderStatus::static_create_type_code());
	vnx::register_type_code(::vnx::Request::static_create_type_code());
	vnx::register_type_code(::vnx::RequestQueueBase::static_create_type_code());
	vnx::register_type_code(::vnx::RequestQueue_clear::static_create_type_code());
	vnx::register_type_code(::vnx::RequestQueue_clear_return::static_create_type_code());
	vnx::register_type_code(::vnx::RequestQueue_purge::static_create_type_code());
	vnx::register_type_code(::vnx::RequestQueue_purge_return::static_create_type_code());
	vnx::register_type_code(::vnx::Return::static_create_type_code());
	vnx::register_type_code(::vnx::RouterBase::static_create_type_code());
	vnx::register_type_code(::vnx::Sample::static_create_type_code());
	vnx::register_type_code(::vnx::ServerBase::static_create_type_code());
	vnx::register_type_code(::vnx::Session::static_create_type_code());
	vnx::register_type_code(::vnx::Session_has_permission::static_create_type_code());
	vnx::register_type_code(::vnx::Session_has_permission_return::static_create_type_code());
	vnx::register_type_code(::vnx::Session_has_permission_vnx::static_create_type_code());
	vnx::register_type_code(::vnx::Session_has_permission_vnx_return::static_create_type_code());
	vnx::register_type_code(::vnx::Session_is_anonymous::static_create_type_code());
	vnx::register_type_code(::vnx::Session_is_anonymous_return::static_create_type_code());
	vnx::register_type_code(::vnx::SpyToolBase::static_create_type_code());
	vnx::register_type_code(::vnx::TcpEndpoint::static_create_type_code());
	vnx::register_type_code(::vnx::TcpEndpoint_accept::static_create_type_code());
	vnx::register_type_code(::vnx::TcpEndpoint_accept_return::static_create_type_code());
	vnx::register_type_code(::vnx::TcpEndpoint_bind::static_create_type_code());
	vnx::register_type_code(::vnx::TcpEndpoint_bind_return::static_create_type_code());
	vnx::register_type_code(::vnx::TcpEndpoint_close::static_create_type_code());
	vnx::register_type_code(::vnx::TcpEndpoint_close_return::static_create_type_code());
	vnx::register_type_code(::vnx::TcpEndpoint_connect::static_create_type_code());
	vnx::register_type_code(::vnx::TcpEndpoint_connect_return::static_create_type_code());
	vnx::register_type_code(::vnx::TcpEndpoint_listen::static_create_type_code());
	vnx::register_type_code(::vnx::TcpEndpoint_listen_return::static_create_type_code());
	vnx::register_type_code(::vnx::TcpEndpoint_open::static_create_type_code());
	vnx::register_type_code(::vnx::TcpEndpoint_open_return::static_create_type_code());
	vnx::register_type_code(::vnx::TcpEndpoint_set_options::static_create_type_code());
	vnx::register_type_code(::vnx::TcpEndpoint_set_options_return::static_create_type_code());
	vnx::register_type_code(::vnx::TcpEndpoint_shutdown::static_create_type_code());
	vnx::register_type_code(::vnx::TcpEndpoint_shutdown_return::static_create_type_code());
	vnx::register_type_code(::vnx::TcpEndpoint_to_url::static_create_type_code());
	vnx::register_type_code(::vnx::TcpEndpoint_to_url_return::static_create_type_code());
	vnx::register_type_code(::vnx::TerminalBase::static_create_type_code());
	vnx::register_type_code(::vnx::Terminal_read_char::static_create_type_code());
	vnx::register_type_code(::vnx::Terminal_read_char_return::static_create_type_code());
	vnx::register_type_code(::vnx::Terminal_read_event::static_create_type_code());
	vnx::register_type_code(::vnx::Terminal_read_event_return::static_create_type_code());
	vnx::register_type_code(::vnx::TimeControl::static_create_type_code());
	vnx::register_type_code(::vnx::TimeControl_get_time_micros::static_create_type_code());
	vnx::register_type_code(::vnx::TimeControl_get_time_micros_return::static_create_type_code());
	vnx::register_type_code(::vnx::TimeServerBase::static_create_type_code());
	vnx::register_type_code(::vnx::TimeSync::static_create_type_code());
	vnx::register_type_code(::vnx::TimeSync_get_time_micros::static_create_type_code());
	vnx::register_type_code(::vnx::TimeSync_get_time_micros_return::static_create_type_code());
	vnx::register_type_code(::vnx::TopicInfo::static_create_type_code());
	vnx::register_type_code(::vnx::TopicInfoList::static_create_type_code());
	vnx::register_type_code(::vnx::Tuple::static_create_type_code());
	vnx::register_type_code(::vnx::Tuple_get_field_by_index::static_create_type_code());
	vnx::register_type_code(::vnx::Tuple_get_field_by_index_return::static_create_type_code());
	vnx::register_type_code(::vnx::Tuple_get_num_fields::static_create_type_code());
	vnx::register_type_code(::vnx::Tuple_get_num_fields_return::static_create_type_code());
	vnx::register_type_code(::vnx::Tuple_set_field_by_index::static_create_type_code());
	vnx::register_type_code(::vnx::Tuple_set_field_by_index_return::static_create_type_code());
	vnx::register_type_code(::vnx::UnixEndpoint::static_create_type_code());
	vnx::register_type_code(::vnx::UnixEndpoint_accept::static_create_type_code());
	vnx::register_type_code(::vnx::UnixEndpoint_accept_return::static_create_type_code());
	vnx::register_type_code(::vnx::UnixEndpoint_bind::static_create_type_code());
	vnx::register_type_code(::vnx::UnixEndpoint_bind_return::static_create_type_code());
	vnx::register_type_code(::vnx::UnixEndpoint_close::static_create_type_code());
	vnx::register_type_code(::vnx::UnixEndpoint_close_return::static_create_type_code());
	vnx::register_type_code(::vnx::UnixEndpoint_connect::static_create_type_code());
	vnx::register_type_code(::vnx::UnixEndpoint_connect_return::static_create_type_code());
	vnx::register_type_code(::vnx::UnixEndpoint_listen::static_create_type_code());
	vnx::register_type_code(::vnx::UnixEndpoint_listen_return::static_create_type_code());
	vnx::register_type_code(::vnx::UnixEndpoint_open::static_create_type_code());
	vnx::register_type_code(::vnx::UnixEndpoint_open_return::static_create_type_code());
	vnx::register_type_code(::vnx::UnixEndpoint_set_options::static_create_type_code());
	vnx::register_type_code(::vnx::UnixEndpoint_set_options_return::static_create_type_code());
	vnx::register_type_code(::vnx::UnixEndpoint_shutdown::static_create_type_code());
	vnx::register_type_code(::vnx::UnixEndpoint_shutdown_return::static_create_type_code());
	vnx::register_type_code(::vnx::UnixEndpoint_to_url::static_create_type_code());
	vnx::register_type_code(::vnx::UnixEndpoint_to_url_return::static_create_type_code());
	vnx::register_type_code(::vnx::User::static_create_type_code());
	vnx::register_type_code(::vnx::access_role_e::static_create_type_code());
	vnx::register_type_code(::vnx::permission_e::static_create_type_code());
	vnx::register_type_code(::vnx::record_index_entry_t::static_create_type_code());
	vnx::register_type_code(::vnx::record_topic_info_t::static_create_type_code());
	vnx::register_type_code(::vnx::terminal_event_e::static_create_type_code());
	vnx::register_type_code(::vnx::thread_priority_e::static_create_type_code());
}

static struct vnx_static_init {
	vnx_static_init() {
		register_all_types();
	}
} vnx_static_init_;

const vnx::TypeCode* const vnx_native_type_code_BaseProxyBase = vnx::get_type_code(vnx::Hash64(0xd8241ff9082104f5ull));
const vnx::TypeCode* const vnx_native_type_code_BaseServerBase = vnx::get_type_code(vnx::Hash64(0x32447d0af36eb445ull));
const vnx::TypeCode* const vnx_native_type_code_Endpoint = vnx::get_type_code(vnx::Hash64(0xa4b49f6b62de09d7ull));
const vnx::TypeCode* const vnx_native_type_code_Endpoint_accept = vnx::get_type_code(vnx::Hash64(0x6b14b11386336a88ull));
const vnx::TypeCode* const vnx_native_type_code_Endpoint_accept_return = vnx::get_type_code(vnx::Hash64(0x68ff5d7b0f2d8553ull));
const vnx::TypeCode* const vnx_native_type_code_Endpoint_bind = vnx::get_type_code(vnx::Hash64(0xf4cb30bb0b382bc3ull));
const vnx::TypeCode* const vnx_native_type_code_Endpoint_bind_return = vnx::get_type_code(vnx::Hash64(0x6bed2837487ecf90ull));
const vnx::TypeCode* const vnx_native_type_code_Endpoint_connect = vnx::get_type_code(vnx::Hash64(0xeb6f6f23b9cc504cull));
const vnx::TypeCode* const vnx_native_type_code_Endpoint_connect_return = vnx::get_type_code(vnx::Hash64(0xbe758cd488f80d70ull));
const vnx::TypeCode* const vnx_native_type_code_Endpoint_listen = vnx::get_type_code(vnx::Hash64(0xb4ce343ca89d6718ull));
const vnx::TypeCode* const vnx_native_type_code_Endpoint_listen_return = vnx::get_type_code(vnx::Hash64(0x5765b381ffdc12c9ull));
const vnx::TypeCode* const vnx_native_type_code_Endpoint_open = vnx::get_type_code(vnx::Hash64(0x1f54c9a1e8f45beeull));
const vnx::TypeCode* const vnx_native_type_code_Endpoint_open_return = vnx::get_type_code(vnx::Hash64(0x31fcc6e6d6a4a33dull));
const vnx::TypeCode* const vnx_native_type_code_Endpoint_shutdown = vnx::get_type_code(vnx::Hash64(0xbf9866d0d9ce44eaull));
const vnx::TypeCode* const vnx_native_type_code_Endpoint_shutdown_return = vnx::get_type_code(vnx::Hash64(0x497fec0ad7fced1full));
const vnx::TypeCode* const vnx_native_type_code_Endpoint_to_url = vnx::get_type_code(vnx::Hash64(0x4362b4ad51f861f5ull));
const vnx::TypeCode* const vnx_native_type_code_Endpoint_to_url_return = vnx::get_type_code(vnx::Hash64(0xea6d552f1acb0570ull));
const vnx::TypeCode* const vnx_native_type_code_Exception = vnx::get_type_code(vnx::Hash64(0x5cd32aac8621de11ull));
const vnx::TypeCode* const vnx_native_type_code_FlowMessage = vnx::get_type_code(vnx::Hash64(0x496b887fb39119c2ull));
const vnx::TypeCode* const vnx_native_type_code_Frame = vnx::get_type_code(vnx::Hash64(0x2bcfeea96d21ae9bull));
const vnx::TypeCode* const vnx_native_type_code_GatewayBase = vnx::get_type_code(vnx::Hash64(0xe3980e0cfa2a352aull));
const vnx::TypeCode* const vnx_native_type_code_GatewayInterface_forward = vnx::get_type_code(vnx::Hash64(0x2bb048616aefdcf6ull));
const vnx::TypeCode* const vnx_native_type_code_GatewayInterface_forward_return = vnx::get_type_code(vnx::Hash64(0x3d6b8646d83530bbull));
const vnx::TypeCode* const vnx_native_type_code_Generic = vnx::get_type_code(vnx::Hash64(0x18b78df58e8b9cfeull));
const vnx::TypeCode* const vnx_native_type_code_InternalError = vnx::get_type_code(vnx::Hash64(0xe3a5c8a7193b8c49ull));
const vnx::TypeCode* const vnx_native_type_code_JRPC_Error = vnx::get_type_code(vnx::Hash64(0x4da8afba21c28c82ull));
const vnx::TypeCode* const vnx_native_type_code_JRPC_Failure = vnx::get_type_code(vnx::Hash64(0x32b6191aa4b738deull));
const vnx::TypeCode* const vnx_native_type_code_JRPC_Notification = vnx::get_type_code(vnx::Hash64(0xace27e598a6b5256ull));
const vnx::TypeCode* const vnx_native_type_code_JRPC_ProxyBase = vnx::get_type_code(vnx::Hash64(0x8f49f08256b4e765ull));
const vnx::TypeCode* const vnx_native_type_code_JRPC_Proxy_select_service = vnx::get_type_code(vnx::Hash64(0x46f370b62d703bf3ull));
const vnx::TypeCode* const vnx_native_type_code_JRPC_Proxy_select_service_return = vnx::get_type_code(vnx::Hash64(0xdc7089e6c94148f7ull));
const vnx::TypeCode* const vnx_native_type_code_JRPC_Request = vnx::get_type_code(vnx::Hash64(0x3fa720cce7b7a1d5ull));
const vnx::TypeCode* const vnx_native_type_code_JRPC_Request_is_notification = vnx::get_type_code(vnx::Hash64(0xf9eb2d8015b3c619ull));
const vnx::TypeCode* const vnx_native_type_code_JRPC_Request_is_notification_return = vnx::get_type_code(vnx::Hash64(0x1205523b87f1309eull));
const vnx::TypeCode* const vnx_native_type_code_JRPC_Request_is_request = vnx::get_type_code(vnx::Hash64(0x62fe799ef5f20eb0ull));
const vnx::TypeCode* const vnx_native_type_code_JRPC_Request_is_request_return = vnx::get_type_code(vnx::Hash64(0xa2beeb219278e2aeull));
const vnx::TypeCode* const vnx_native_type_code_JRPC_Request_is_request_object = vnx::get_type_code(vnx::Hash64(0x50fda27cdef051cfull));
const vnx::TypeCode* const vnx_native_type_code_JRPC_Request_is_request_object_return = vnx::get_type_code(vnx::Hash64(0x965147bd84327ee2ull));
const vnx::TypeCode* const vnx_native_type_code_JRPC_Response = vnx::get_type_code(vnx::Hash64(0xb9581383ef889230ull));
const vnx::TypeCode* const vnx_native_type_code_JRPC_Response_is_response_object = vnx::get_type_code(vnx::Hash64(0xb998712aff138e21ull));
const vnx::TypeCode* const vnx_native_type_code_JRPC_Response_is_response_object_return = vnx::get_type_code(vnx::Hash64(0xbeccfc1b9731a4e3ull));
const vnx::TypeCode* const vnx_native_type_code_JRPC_ServerBase = vnx::get_type_code(vnx::Hash64(0x86e4e6480e8448adull));
const vnx::TypeCode* const vnx_native_type_code_JRPC_Success = vnx::get_type_code(vnx::Hash64(0x66143096e2f9a785ull));
const vnx::TypeCode* const vnx_native_type_code_LogMsg = vnx::get_type_code(vnx::Hash64(0x2a13f6d072f9b852ull));
const vnx::TypeCode* const vnx_native_type_code_LogMsg_get_output = vnx::get_type_code(vnx::Hash64(0x1f325019a98c0f8dull));
const vnx::TypeCode* const vnx_native_type_code_LogMsg_get_output_return = vnx::get_type_code(vnx::Hash64(0xb70454ede4889d07ull));
const vnx::TypeCode* const vnx_native_type_code_Marker = vnx::get_type_code(vnx::Hash64(0x26b6ce86f1cebd78ull));
const vnx::TypeCode* const vnx_native_type_code_Message = vnx::get_type_code(vnx::Hash64(0xff12a5be92ae4dafull));
const vnx::TypeCode* const vnx_native_type_code_ModuleInfo = vnx::get_type_code(vnx::Hash64(0xde56f839ffcee92ull));
const vnx::TypeCode* const vnx_native_type_code_ModuleInfo_get_cpu_load = vnx::get_type_code(vnx::Hash64(0xfc59e460d5536e4aull));
const vnx::TypeCode* const vnx_native_type_code_ModuleInfo_get_cpu_load_return = vnx::get_type_code(vnx::Hash64(0x6fe520601912014aull));
const vnx::TypeCode* const vnx_native_type_code_ModuleInfo_get_cpu_load_total = vnx::get_type_code(vnx::Hash64(0xf76722d8c74ee1fdull));
const vnx::TypeCode* const vnx_native_type_code_ModuleInfo_get_cpu_load_total_return = vnx::get_type_code(vnx::Hash64(0xeaff2eadb09b178eull));
const vnx::TypeCode* const vnx_native_type_code_ModuleInterface_vnx_get_config = vnx::get_type_code(vnx::Hash64(0xbbc7f1a01044d294ull));
const vnx::TypeCode* const vnx_native_type_code_ModuleInterface_vnx_get_config_return = vnx::get_type_code(vnx::Hash64(0xe5b6c635f30b18a1ull));
const vnx::TypeCode* const vnx_native_type_code_ModuleInterface_vnx_get_config_object = vnx::get_type_code(vnx::Hash64(0x17f58f68bf83abc0ull));
const vnx::TypeCode* const vnx_native_type_code_ModuleInterface_vnx_get_config_object_return = vnx::get_type_code(vnx::Hash64(0xa913f47dc68e4876ull));
const vnx::TypeCode* const vnx_native_type_code_ModuleInterface_vnx_get_module_info = vnx::get_type_code(vnx::Hash64(0xf6d82bdf66d034a1ull));
const vnx::TypeCode* const vnx_native_type_code_ModuleInterface_vnx_get_module_info_return = vnx::get_type_code(vnx::Hash64(0xfa24b8a5a75620cfull));
const vnx::TypeCode* const vnx_native_type_code_ModuleInterface_vnx_get_type_code = vnx::get_type_code(vnx::Hash64(0x305ec4d628960e5dull));
const vnx::TypeCode* const vnx_native_type_code_ModuleInterface_vnx_get_type_code_return = vnx::get_type_code(vnx::Hash64(0x9f4322ca83b0d1ull));
const vnx::TypeCode* const vnx_native_type_code_ModuleInterface_vnx_restart = vnx::get_type_code(vnx::Hash64(0x9e95dc280cecca1bull));
const vnx::TypeCode* const vnx_native_type_code_ModuleInterface_vnx_restart_return = vnx::get_type_code(vnx::Hash64(0x2133a6eee0102018ull));
const vnx::TypeCode* const vnx_native_type_code_ModuleInterface_vnx_self_test = vnx::get_type_code(vnx::Hash64(0x6ce3775b41a42697ull));
const vnx::TypeCode* const vnx_native_type_code_ModuleInterface_vnx_self_test_return = vnx::get_type_code(vnx::Hash64(0x8fa3e6609b3347c3ull));
const vnx::TypeCode* const vnx_native_type_code_ModuleInterface_vnx_set_config = vnx::get_type_code(vnx::Hash64(0x362aac91373958b7ull));
const vnx::TypeCode* const vnx_native_type_code_ModuleInterface_vnx_set_config_return = vnx::get_type_code(vnx::Hash64(0x3873b149bdf7814eull));
const vnx::TypeCode* const vnx_native_type_code_ModuleInterface_vnx_set_config_object = vnx::get_type_code(vnx::Hash64(0xca30f814f17f322full));
const vnx::TypeCode* const vnx_native_type_code_ModuleInterface_vnx_set_config_object_return = vnx::get_type_code(vnx::Hash64(0xdd5ede96590e3d28ull));
const vnx::TypeCode* const vnx_native_type_code_ModuleInterface_vnx_stop = vnx::get_type_code(vnx::Hash64(0x7ab49ce3d1bfc0d2ull));
const vnx::TypeCode* const vnx_native_type_code_ModuleInterface_vnx_stop_return = vnx::get_type_code(vnx::Hash64(0xfc3b62878a8d924ull));
const vnx::TypeCode* const vnx_native_type_code_NoSuchMethod = vnx::get_type_code(vnx::Hash64(0x6e811245e86c2629ull));
const vnx::TypeCode* const vnx_native_type_code_NoSuchService = vnx::get_type_code(vnx::Hash64(0x2e35fc01cf168b79ull));
const vnx::TypeCode* const vnx_native_type_code_OverflowException = vnx::get_type_code(vnx::Hash64(0xba120fc8b6c0e004ull));
const vnx::TypeCode* const vnx_native_type_code_PermissionDenied = vnx::get_type_code(vnx::Hash64(0x3785e66bbcd39a78ull));
const vnx::TypeCode* const vnx_native_type_code_PlayerBase = vnx::get_type_code(vnx::Hash64(0x18af8c0a3c1bbcull));
const vnx::TypeCode* const vnx_native_type_code_Player_get_info = vnx::get_type_code(vnx::Hash64(0x1ae86b011006dadull));
const vnx::TypeCode* const vnx_native_type_code_Player_get_info_return = vnx::get_type_code(vnx::Hash64(0x155f2f85e178ed02ull));
const vnx::TypeCode* const vnx_native_type_code_Player_pause = vnx::get_type_code(vnx::Hash64(0x439f7eeb5c70c3ffull));
const vnx::TypeCode* const vnx_native_type_code_Player_pause_return = vnx::get_type_code(vnx::Hash64(0xf30142026ab881b1ull));
const vnx::TypeCode* const vnx_native_type_code_Player_play = vnx::get_type_code(vnx::Hash64(0x49f930aaa55662c1ull));
const vnx::TypeCode* const vnx_native_type_code_Player_play_return = vnx::get_type_code(vnx::Hash64(0xc6e48596e7a5b98ull));
const vnx::TypeCode* const vnx_native_type_code_Player_seek_by_count = vnx::get_type_code(vnx::Hash64(0x8a3e8bcc0f1a9b93ull));
const vnx::TypeCode* const vnx_native_type_code_Player_seek_by_count_return = vnx::get_type_code(vnx::Hash64(0x22fe568f251437ffull));
const vnx::TypeCode* const vnx_native_type_code_Player_seek_by_time = vnx::get_type_code(vnx::Hash64(0xd00881ef749ec2b8ull));
const vnx::TypeCode* const vnx_native_type_code_Player_seek_by_time_return = vnx::get_type_code(vnx::Hash64(0x3e99010cd7084199ull));
const vnx::TypeCode* const vnx_native_type_code_Player_seek_to_position = vnx::get_type_code(vnx::Hash64(0xaef7c805f3f91f23ull));
const vnx::TypeCode* const vnx_native_type_code_Player_seek_to_position_return = vnx::get_type_code(vnx::Hash64(0x5db0081cf190ef40ull));
const vnx::TypeCode* const vnx_native_type_code_Player_seek_to_time = vnx::get_type_code(vnx::Hash64(0x31e33676e70bdfaull));
const vnx::TypeCode* const vnx_native_type_code_Player_seek_to_time_return = vnx::get_type_code(vnx::Hash64(0x6bc8d67609974f43ull));
const vnx::TypeCode* const vnx_native_type_code_Player_set_speed = vnx::get_type_code(vnx::Hash64(0xadab13bfccf029a7ull));
const vnx::TypeCode* const vnx_native_type_code_Player_set_speed_return = vnx::get_type_code(vnx::Hash64(0xf7549b270ed4970dull));
const vnx::TypeCode* const vnx_native_type_code_Player_stop = vnx::get_type_code(vnx::Hash64(0xec400dd621046187ull));
const vnx::TypeCode* const vnx_native_type_code_Player_stop_return = vnx::get_type_code(vnx::Hash64(0xe722f78b3a61d58full));
const vnx::TypeCode* const vnx_native_type_code_Player_toggle = vnx::get_type_code(vnx::Hash64(0xaac4c063def8098eull));
const vnx::TypeCode* const vnx_native_type_code_Player_toggle_return = vnx::get_type_code(vnx::Hash64(0x3fbdff84925a6459ull));
const vnx::TypeCode* const vnx_native_type_code_PlayerStatus = vnx::get_type_code(vnx::Hash64(0x7356e9a5699a79ebull));
const vnx::TypeCode* const vnx_native_type_code_ProcessBase = vnx::get_type_code(vnx::Hash64(0x149355fa43209cb1ull));
const vnx::TypeCode* const vnx_native_type_code_Process_get_global_config = vnx::get_type_code(vnx::Hash64(0x45f9dbed550b37d9ull));
const vnx::TypeCode* const vnx_native_type_code_Process_get_global_config_return = vnx::get_type_code(vnx::Hash64(0x7b082df43cc961daull));
const vnx::TypeCode* const vnx_native_type_code_Process_get_module_info = vnx::get_type_code(vnx::Hash64(0x61e2fd6d8b7d628ull));
const vnx::TypeCode* const vnx_native_type_code_Process_get_module_info_return = vnx::get_type_code(vnx::Hash64(0x24eb4f8747f591b6ull));
const vnx::TypeCode* const vnx_native_type_code_Process_get_name = vnx::get_type_code(vnx::Hash64(0xcc81c6fa292b2300ull));
const vnx::TypeCode* const vnx_native_type_code_Process_get_name_return = vnx::get_type_code(vnx::Hash64(0x1fd769809363d159ull));
const vnx::TypeCode* const vnx_native_type_code_Process_get_process_info = vnx::get_type_code(vnx::Hash64(0x4df5fe4349df342eull));
const vnx::TypeCode* const vnx_native_type_code_Process_get_process_info_return = vnx::get_type_code(vnx::Hash64(0x15a37acb93810470ull));
const vnx::TypeCode* const vnx_native_type_code_Process_get_sync_time = vnx::get_type_code(vnx::Hash64(0x52100ddd83201e5cull));
const vnx::TypeCode* const vnx_native_type_code_Process_get_sync_time_return = vnx::get_type_code(vnx::Hash64(0xa67d1784bea7f1a2ull));
const vnx::TypeCode* const vnx_native_type_code_Process_get_topic_info = vnx::get_type_code(vnx::Hash64(0xa4d23f22700c78c4ull));
const vnx::TypeCode* const vnx_native_type_code_Process_get_topic_info_return = vnx::get_type_code(vnx::Hash64(0xe5f9d0a4457788e6ull));
const vnx::TypeCode* const vnx_native_type_code_Process_grep_log = vnx::get_type_code(vnx::Hash64(0x2cbc4a5cebf11808ull));
const vnx::TypeCode* const vnx_native_type_code_Process_grep_log_return = vnx::get_type_code(vnx::Hash64(0x415084b2250e7b57ull));
const vnx::TypeCode* const vnx_native_type_code_Process_journal_log = vnx::get_type_code(vnx::Hash64(0x9eb901b7a36ac0c1ull));
const vnx::TypeCode* const vnx_native_type_code_Process_journal_log_return = vnx::get_type_code(vnx::Hash64(0xf5ccc90fd9a8eeb7ull));
const vnx::TypeCode* const vnx_native_type_code_Process_pause_log = vnx::get_type_code(vnx::Hash64(0xab840945a4069720ull));
const vnx::TypeCode* const vnx_native_type_code_Process_pause_log_return = vnx::get_type_code(vnx::Hash64(0x2cdf1db2761c3cb6ull));
const vnx::TypeCode* const vnx_native_type_code_Process_reload_config = vnx::get_type_code(vnx::Hash64(0x434937c5c6f96de7ull));
const vnx::TypeCode* const vnx_native_type_code_Process_reload_config_return = vnx::get_type_code(vnx::Hash64(0x993aa66108eb7604ull));
const vnx::TypeCode* const vnx_native_type_code_Process_resume_log = vnx::get_type_code(vnx::Hash64(0x47a431cdd5ea3171ull));
const vnx::TypeCode* const vnx_native_type_code_Process_resume_log_return = vnx::get_type_code(vnx::Hash64(0x7fd9a4de7ef8342ull));
const vnx::TypeCode* const vnx_native_type_code_Process_self_test_all = vnx::get_type_code(vnx::Hash64(0x757d61aa2ac74f7bull));
const vnx::TypeCode* const vnx_native_type_code_Process_self_test_all_return = vnx::get_type_code(vnx::Hash64(0xefecab6a405a1030ull));
const vnx::TypeCode* const vnx_native_type_code_Process_set_debug = vnx::get_type_code(vnx::Hash64(0xdc4916fdbd8d5616ull));
const vnx::TypeCode* const vnx_native_type_code_Process_set_debug_return = vnx::get_type_code(vnx::Hash64(0xb3e01fc91168394full));
const vnx::TypeCode* const vnx_native_type_code_Process_set_global_config = vnx::get_type_code(vnx::Hash64(0x983cac911bf7ae36ull));
const vnx::TypeCode* const vnx_native_type_code_Process_set_global_config_return = vnx::get_type_code(vnx::Hash64(0xf45071fa3491484ull));
const vnx::TypeCode* const vnx_native_type_code_Process_show_error_log = vnx::get_type_code(vnx::Hash64(0xd569d9ff26cc2b95ull));
const vnx::TypeCode* const vnx_native_type_code_Process_show_error_log_return = vnx::get_type_code(vnx::Hash64(0x23badcf748af1bfeull));
const vnx::TypeCode* const vnx_native_type_code_Process_trigger_shutdown = vnx::get_type_code(vnx::Hash64(0x2b724b09091c4b96ull));
const vnx::TypeCode* const vnx_native_type_code_Process_trigger_shutdown_return = vnx::get_type_code(vnx::Hash64(0x963e9cd6868f467dull));
const vnx::TypeCode* const vnx_native_type_code_Process_ungrep_log = vnx::get_type_code(vnx::Hash64(0xf34b9052419eb6caull));
const vnx::TypeCode* const vnx_native_type_code_Process_ungrep_log_return = vnx::get_type_code(vnx::Hash64(0xe322c5edb2d52751ull));
const vnx::TypeCode* const vnx_native_type_code_ProcessInfo = vnx::get_type_code(vnx::Hash64(0x24c2972620368907ull));
const vnx::TypeCode* const vnx_native_type_code_ProxyBase = vnx::get_type_code(vnx::Hash64(0x7179aa6109e5d72dull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_disable_export = vnx::get_type_code(vnx::Hash64(0x255ec29037ffaac4ull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_disable_export_return = vnx::get_type_code(vnx::Hash64(0x3c5a282d7e151b56ull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_disable_forward = vnx::get_type_code(vnx::Hash64(0x4829f4ced514a3e1ull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_disable_forward_return = vnx::get_type_code(vnx::Hash64(0x40abdde3314d8b42ull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_disable_import = vnx::get_type_code(vnx::Hash64(0xa465d5b138bd53eull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_disable_import_return = vnx::get_type_code(vnx::Hash64(0x52a9490b5f0b6a60ull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_disable_tunnel = vnx::get_type_code(vnx::Hash64(0xb9a7abaf9d00b54bull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_disable_tunnel_return = vnx::get_type_code(vnx::Hash64(0xdcfce61e03942842ull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_enable_export = vnx::get_type_code(vnx::Hash64(0xbca6b569c4b73ff7ull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_enable_export_return = vnx::get_type_code(vnx::Hash64(0x9718d8624c9536d3ull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_enable_forward = vnx::get_type_code(vnx::Hash64(0x89b695187455be9bull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_enable_forward_return = vnx::get_type_code(vnx::Hash64(0x419247bc55d00571ull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_enable_import = vnx::get_type_code(vnx::Hash64(0x93be2aa2e0c3400dull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_enable_import_return = vnx::get_type_code(vnx::Hash64(0xf9ebb9446d8b47e5ull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_enable_tunnel = vnx::get_type_code(vnx::Hash64(0x205fdc566e482078ull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_enable_tunnel_return = vnx::get_type_code(vnx::Hash64(0x77be1651311405c7ull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_get_session = vnx::get_type_code(vnx::Hash64(0x60cf186ca96171f6ull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_get_session_return = vnx::get_type_code(vnx::Hash64(0x98cdb953e8233d03ull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_login = vnx::get_type_code(vnx::Hash64(0xe1cd627631f1b2f1ull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_login_return = vnx::get_type_code(vnx::Hash64(0x9cd4cd807b1b9e19ull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_on_connect = vnx::get_type_code(vnx::Hash64(0x62d6b28adfabac18ull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_on_connect_return = vnx::get_type_code(vnx::Hash64(0xc9aa1ac4ba90beddull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_on_disconnect = vnx::get_type_code(vnx::Hash64(0x9f7411664fb7ff6ull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_on_disconnect_return = vnx::get_type_code(vnx::Hash64(0xc7a46c6906e469abull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_on_login = vnx::get_type_code(vnx::Hash64(0x5df07f9c3a42bf5aull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_on_login_return = vnx::get_type_code(vnx::Hash64(0x546414b99444670aull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_on_remote_connect = vnx::get_type_code(vnx::Hash64(0x58d0fc825fa3d477ull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_on_remote_connect_return = vnx::get_type_code(vnx::Hash64(0x4e4469ad1a22bfc4ull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_on_remote_login = vnx::get_type_code(vnx::Hash64(0xfdef02ccd8b73be4ull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_on_remote_login_return = vnx::get_type_code(vnx::Hash64(0x5d370b9c467678daull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_wait_on_connect = vnx::get_type_code(vnx::Hash64(0x21e57eee5d93712eull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_wait_on_connect_return = vnx::get_type_code(vnx::Hash64(0xa90826196f1f3161ull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_wait_on_disconnect = vnx::get_type_code(vnx::Hash64(0xa313fafa981a7560ull));
const vnx::TypeCode* const vnx_native_type_code_ProxyInterface_wait_on_disconnect_return = vnx::get_type_code(vnx::Hash64(0xe1f53128ce0ee897ull));
const vnx::TypeCode* const vnx_native_type_code_RecordHeader = vnx::get_type_code(vnx::Hash64(0x38eef92562acfa98ull));
const vnx::TypeCode* const vnx_native_type_code_RecordIndex = vnx::get_type_code(vnx::Hash64(0xe361371e3c5531e9ull));
const vnx::TypeCode* const vnx_native_type_code_RecordPointer = vnx::get_type_code(vnx::Hash64(0xc8576068e15b2dcdull));
const vnx::TypeCode* const vnx_native_type_code_RecorderBase = vnx::get_type_code(vnx::Hash64(0x1325106a28614e06ull));
const vnx::TypeCode* const vnx_native_type_code_RecorderStatus = vnx::get_type_code(vnx::Hash64(0xc79edae794af8704ull));
const vnx::TypeCode* const vnx_native_type_code_Request = vnx::get_type_code(vnx::Hash64(0x2838ef2ae539a080ull));
const vnx::TypeCode* const vnx_native_type_code_RequestQueueBase = vnx::get_type_code(vnx::Hash64(0x4d2d5c9256513d6eull));
const vnx::TypeCode* const vnx_native_type_code_RequestQueue_clear = vnx::get_type_code(vnx::Hash64(0xda63d65c4d403470ull));
const vnx::TypeCode* const vnx_native_type_code_RequestQueue_clear_return = vnx::get_type_code(vnx::Hash64(0xfa160f558a3fd498ull));
const vnx::TypeCode* const vnx_native_type_code_RequestQueue_purge = vnx::get_type_code(vnx::Hash64(0x6dc84778a7fda53bull));
const vnx::TypeCode* const vnx_native_type_code_RequestQueue_purge_return = vnx::get_type_code(vnx::Hash64(0xcf80740a74ba3de8ull));
const vnx::TypeCode* const vnx_native_type_code_Return = vnx::get_type_code(vnx::Hash64(0x941aec28b3f42d7dull));
const vnx::TypeCode* const vnx_native_type_code_RouterBase = vnx::get_type_code(vnx::Hash64(0xb54f7e3c4fbc9addull));
const vnx::TypeCode* const vnx_native_type_code_Sample = vnx::get_type_code(vnx::Hash64(0x82bffc4ec21d2408ull));
const vnx::TypeCode* const vnx_native_type_code_ServerBase = vnx::get_type_code(vnx::Hash64(0x150d7ad1f906225aull));
const vnx::TypeCode* const vnx_native_type_code_Session = vnx::get_type_code(vnx::Hash64(0xe7e70e14f9c9db05ull));
const vnx::TypeCode* const vnx_native_type_code_Session_has_permission = vnx::get_type_code(vnx::Hash64(0x895700aa9f82278cull));
const vnx::TypeCode* const vnx_native_type_code_Session_has_permission_return = vnx::get_type_code(vnx::Hash64(0x37c641a50c5b76ddull));
const vnx::TypeCode* const vnx_native_type_code_Session_has_permission_vnx = vnx::get_type_code(vnx::Hash64(0x9b7575f5ebcba714ull));
const vnx::TypeCode* const vnx_native_type_code_Session_has_permission_vnx_return = vnx::get_type_code(vnx::Hash64(0x3140470be901723aull));
const vnx::TypeCode* const vnx_native_type_code_Session_is_anonymous = vnx::get_type_code(vnx::Hash64(0xa6613bfe0c1226e0ull));
const vnx::TypeCode* const vnx_native_type_code_Session_is_anonymous_return = vnx::get_type_code(vnx::Hash64(0xea2195599178da3aull));
const vnx::TypeCode* const vnx_native_type_code_SpyToolBase = vnx::get_type_code(vnx::Hash64(0x908abf18434bf596ull));
const vnx::TypeCode* const vnx_native_type_code_TcpEndpoint = vnx::get_type_code(vnx::Hash64(0x57568f5ebed2acedull));
const vnx::TypeCode* const vnx_native_type_code_TcpEndpoint_accept = vnx::get_type_code(vnx::Hash64(0xd6bfe7141a5482a7ull));
const vnx::TypeCode* const vnx_native_type_code_TcpEndpoint_accept_return = vnx::get_type_code(vnx::Hash64(0xe0bfb228687810f1ull));
const vnx::TypeCode* const vnx_native_type_code_TcpEndpoint_bind = vnx::get_type_code(vnx::Hash64(0x60904a6a0073dd35ull));
const vnx::TypeCode* const vnx_native_type_code_TcpEndpoint_bind_return = vnx::get_type_code(vnx::Hash64(0x5b2245bbdff5438bull));
const vnx::TypeCode* const vnx_native_type_code_TcpEndpoint_close = vnx::get_type_code(vnx::Hash64(0x139036cfaab0583dull));
const vnx::TypeCode* const vnx_native_type_code_TcpEndpoint_close_return = vnx::get_type_code(vnx::Hash64(0xda783c65d28f4089ull));
const vnx::TypeCode* const vnx_native_type_code_TcpEndpoint_connect = vnx::get_type_code(vnx::Hash64(0xdb3eb861b740e657ull));
const vnx::TypeCode* const vnx_native_type_code_TcpEndpoint_connect_return = vnx::get_type_code(vnx::Hash64(0x7822ef89063e3b6eull));
const vnx::TypeCode* const vnx_native_type_code_TcpEndpoint_listen = vnx::get_type_code(vnx::Hash64(0x965623b34fa8f37ull));
const vnx::TypeCode* const vnx_native_type_code_TcpEndpoint_listen_return = vnx::get_type_code(vnx::Hash64(0xdf255cd29889876bull));
const vnx::TypeCode* const vnx_native_type_code_TcpEndpoint_open = vnx::get_type_code(vnx::Hash64(0x8b0fb370e3bfad18ull));
const vnx::TypeCode* const vnx_native_type_code_TcpEndpoint_open_return = vnx::get_type_code(vnx::Hash64(0x133ab6a412f2f26ull));
const vnx::TypeCode* const vnx_native_type_code_TcpEndpoint_set_options = vnx::get_type_code(vnx::Hash64(0x8458afe05a08ddffull));
const vnx::TypeCode* const vnx_native_type_code_TcpEndpoint_set_options_return = vnx::get_type_code(vnx::Hash64(0xfacc1773ba706804ull));
const vnx::TypeCode* const vnx_native_type_code_TcpEndpoint_shutdown = vnx::get_type_code(vnx::Hash64(0x72386bdf9e0aed47ull));
const vnx::TypeCode* const vnx_native_type_code_TcpEndpoint_shutdown_return = vnx::get_type_code(vnx::Hash64(0x4cd7688b73900f6eull));
const vnx::TypeCode* const vnx_native_type_code_TcpEndpoint_to_url = vnx::get_type_code(vnx::Hash64(0xfec9e2aacd9f89daull));
const vnx::TypeCode* const vnx_native_type_code_TcpEndpoint_to_url_return = vnx::get_type_code(vnx::Hash64(0x622dba7c7d9e90d2ull));
const vnx::TypeCode* const vnx_native_type_code_TerminalBase = vnx::get_type_code(vnx::Hash64(0xa4ce75801916357bull));
const vnx::TypeCode* const vnx_native_type_code_Terminal_read_char = vnx::get_type_code(vnx::Hash64(0xbba4b21472683454ull));
const vnx::TypeCode* const vnx_native_type_code_Terminal_read_char_return = vnx::get_type_code(vnx::Hash64(0xac71ae1e90f39fa1ull));
const vnx::TypeCode* const vnx_native_type_code_Terminal_read_event = vnx::get_type_code(vnx::Hash64(0x5c01345c24f51c67ull));
const vnx::TypeCode* const vnx_native_type_code_Terminal_read_event_return = vnx::get_type_code(vnx::Hash64(0x8dfff1101dba5dc9ull));
const vnx::TypeCode* const vnx_native_type_code_TimeControl = vnx::get_type_code(vnx::Hash64(0x7a87353e7678e927ull));
const vnx::TypeCode* const vnx_native_type_code_TimeControl_get_time_micros = vnx::get_type_code(vnx::Hash64(0x26272ec20735b52eull));
const vnx::TypeCode* const vnx_native_type_code_TimeControl_get_time_micros_return = vnx::get_type_code(vnx::Hash64(0xbf473e87d765d495ull));
const vnx::TypeCode* const vnx_native_type_code_TimeServerBase = vnx::get_type_code(vnx::Hash64(0x473fc7e0942fb246ull));
const vnx::TypeCode* const vnx_native_type_code_TimeSync = vnx::get_type_code(vnx::Hash64(0xbf54227bf7e745b4ull));
const vnx::TypeCode* const vnx_native_type_code_TimeSync_get_time_micros = vnx::get_type_code(vnx::Hash64(0xd75f3c7cc892926aull));
const vnx::TypeCode* const vnx_native_type_code_TimeSync_get_time_micros_return = vnx::get_type_code(vnx::Hash64(0x879c6e4fb7caf232ull));
const vnx::TypeCode* const vnx_native_type_code_TopicInfo = vnx::get_type_code(vnx::Hash64(0xb891b30e65ff434eull));
const vnx::TypeCode* const vnx_native_type_code_TopicInfoList = vnx::get_type_code(vnx::Hash64(0x6c3f27749539f1c2ull));
const vnx::TypeCode* const vnx_native_type_code_Tuple = vnx::get_type_code(vnx::Hash64(0xd0f5f12fbf08b4b1ull));
const vnx::TypeCode* const vnx_native_type_code_Tuple_get_field_by_index = vnx::get_type_code(vnx::Hash64(0x7007d1d0f7743cb6ull));
const vnx::TypeCode* const vnx_native_type_code_Tuple_get_field_by_index_return = vnx::get_type_code(vnx::Hash64(0x323e009aa5873e9ull));
const vnx::TypeCode* const vnx_native_type_code_Tuple_get_num_fields = vnx::get_type_code(vnx::Hash64(0x966cae32f50133ccull));
const vnx::TypeCode* const vnx_native_type_code_Tuple_get_num_fields_return = vnx::get_type_code(vnx::Hash64(0x67b7209ba62e9cd8ull));
const vnx::TypeCode* const vnx_native_type_code_Tuple_set_field_by_index = vnx::get_type_code(vnx::Hash64(0xedec14ecbe6e993full));
const vnx::TypeCode* const vnx_native_type_code_Tuple_set_field_by_index_return = vnx::get_type_code(vnx::Hash64(0x628f550b53e6507aull));
const vnx::TypeCode* const vnx_native_type_code_UnixEndpoint = vnx::get_type_code(vnx::Hash64(0x8007f4ae5d6628e5ull));
const vnx::TypeCode* const vnx_native_type_code_UnixEndpoint_accept = vnx::get_type_code(vnx::Hash64(0xf0b51227dff3a31bull));
const vnx::TypeCode* const vnx_native_type_code_UnixEndpoint_accept_return = vnx::get_type_code(vnx::Hash64(0xb6128591bcf1c901ull));
const vnx::TypeCode* const vnx_native_type_code_UnixEndpoint_bind = vnx::get_type_code(vnx::Hash64(0xe210eca3ac5f8e3bull));
const vnx::TypeCode* const vnx_native_type_code_UnixEndpoint_bind_return = vnx::get_type_code(vnx::Hash64(0x2174f53eb6bdf319ull));
const vnx::TypeCode* const vnx_native_type_code_UnixEndpoint_close = vnx::get_type_code(vnx::Hash64(0x6be7c4b3cbcd3660ull));
const vnx::TypeCode* const vnx_native_type_code_UnixEndpoint_close_return = vnx::get_type_code(vnx::Hash64(0x9a71aa2f7912c169ull));
const vnx::TypeCode* const vnx_native_type_code_UnixEndpoint_connect = vnx::get_type_code(vnx::Hash64(0x18a942c4a0c606baull));
const vnx::TypeCode* const vnx_native_type_code_UnixEndpoint_connect_return = vnx::get_type_code(vnx::Hash64(0x5302dda970fb908full));
const vnx::TypeCode* const vnx_native_type_code_UnixEndpoint_listen = vnx::get_type_code(vnx::Hash64(0x2f6f9708f15dae8bull));
const vnx::TypeCode* const vnx_native_type_code_UnixEndpoint_listen_return = vnx::get_type_code(vnx::Hash64(0x89886b6b4c005e9bull));
const vnx::TypeCode* const vnx_native_type_code_UnixEndpoint_open = vnx::get_type_code(vnx::Hash64(0x98f15b94f93fe16ull));
const vnx::TypeCode* const vnx_native_type_code_UnixEndpoint_open_return = vnx::get_type_code(vnx::Hash64(0x7b651bef28679fb4ull));
const vnx::TypeCode* const vnx_native_type_code_UnixEndpoint_set_options = vnx::get_type_code(vnx::Hash64(0xfe0e1f6533406d6dull));
const vnx::TypeCode* const vnx_native_type_code_UnixEndpoint_set_options_return = vnx::get_type_code(vnx::Hash64(0x12c66fb35a92bc92ull));
const vnx::TypeCode* const vnx_native_type_code_UnixEndpoint_shutdown = vnx::get_type_code(vnx::Hash64(0x1b49ca39a60992ecull));
const vnx::TypeCode* const vnx_native_type_code_UnixEndpoint_shutdown_return = vnx::get_type_code(vnx::Hash64(0xa93f3a28ce63d1dbull));
const vnx::TypeCode* const vnx_native_type_code_UnixEndpoint_to_url = vnx::get_type_code(vnx::Hash64(0xd8c317990838a866ull));
const vnx::TypeCode* const vnx_native_type_code_UnixEndpoint_to_url_return = vnx::get_type_code(vnx::Hash64(0x34808dc5a9174922ull));
const vnx::TypeCode* const vnx_native_type_code_User = vnx::get_type_code(vnx::Hash64(0x500d208d47b945a2ull));
const vnx::TypeCode* const vnx_native_type_code_access_role_e = vnx::get_type_code(vnx::Hash64(0x915660c6100c6c6eull));
const vnx::TypeCode* const vnx_native_type_code_permission_e = vnx::get_type_code(vnx::Hash64(0xb22885dc987a7be3ull));
const vnx::TypeCode* const vnx_native_type_code_record_index_entry_t = vnx::get_type_code(vnx::Hash64(0x84d2685378679269ull));
const vnx::TypeCode* const vnx_native_type_code_record_topic_info_t = vnx::get_type_code(vnx::Hash64(0x39c9255966eebda0ull));
const vnx::TypeCode* const vnx_native_type_code_terminal_event_e = vnx::get_type_code(vnx::Hash64(0x13b5a20b72babf0dull));
const vnx::TypeCode* const vnx_native_type_code_thread_priority_e = vnx::get_type_code(vnx::Hash64(0x2718d6bed61ee41cull));

} // namespace vnx
