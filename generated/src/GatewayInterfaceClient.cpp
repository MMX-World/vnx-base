
// AUTO GENERATED by vnxcppcodegen

#include <vnx/package.hxx>
#include <vnx/GatewayInterfaceClient.hxx>
#include <vnx/GatewayInterface_forward.hxx>
#include <vnx/GatewayInterface_forward_return.hxx>
#include <vnx/Request.hxx>

#include <vnx/Generic.hxx>
#include <vnx/vnx.h>


namespace vnx {

GatewayInterfaceClient::GatewayInterfaceClient(const std::string& service_name)
	:	Client::Client(vnx::Hash64(service_name))
{
}

GatewayInterfaceClient::GatewayInterfaceClient(vnx::Hash64 service_addr)
	:	Client::Client(service_addr)
{
}

void GatewayInterfaceClient::forward(std::shared_ptr<const ::vnx::Request> request) {
	auto _method = ::vnx::GatewayInterface_forward::create();
	_method->request = request;
	vnx_request(_method, false);
}

void GatewayInterfaceClient::forward_async(std::shared_ptr<const ::vnx::Request> request) {
	auto _method = ::vnx::GatewayInterface_forward::create();
	_method->request = request;
	vnx_request(_method, true);
}


} // namespace vnx
